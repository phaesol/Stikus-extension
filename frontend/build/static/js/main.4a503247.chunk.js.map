{"version":3,"sources":["Components/AmountCalculator/Novi.js","config.js","Components/AmountCalculator/AmountCalculator.js","Hooks/useFetchData.js","Components/AddBasket.js","Service/ACpage.js","Components/DoctorFit/index.js","Service/DFpage.js","Components/Useful/Novi.js","Components/DoctorFit/AgeFit.js","Hooks/useFetchAge.js","Service/DoctorFitPage.js","App.js","index.js"],"names":["NoviGraph","data","keys","useState","window","screen","width","screenWidth","setScreenWidth","handleScreenWidth","console","log","useEffect","addEventListener","removeEventListener","indexBy","margin","top","right","bottom","left","padding","layout","colors","scheme","defs","id","type","background","color","size","stagger","rotation","lineWidth","spacing","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","animate","motionStiffness","motionDamping","BACKEND","tempStyle","height","AmountCalculator","standard","feed","setFeed","nutrient","setNutrient","getFeedAxios","a","Promise","resolve","setTimeout","axios","get","result","fetchedData","error","getNutrientAxios","useFetchData","setKeys","feedKey","setFeedKey","feedAmount","setFeedAmount","nutrientKey","setNutrientKey","nutrinetAmount","initialDataState","setData","filterData","filter","object","parseInt","useHandleFeedData","event","target","name","calorie","moisture","crude_protein","crude_fat","crude_fiber","crude_ash","calcium","phosphorus","feedAmountIndicator","calFeedAmountIndicator","tempData","hasOwnProperty","i","length","parseFloat","toFixed","useHandleNutrientData","targetNutrientData","item","Array","concat","Novi","map","key","onClick","AddBasket","sendBasketSignal","parent","postMessage","target_id","target_category","receiveMessage","origin","ACpage","step","setStep","age1","age2","weight1","weight2","neutralization","bodyFormat","ispregnant","status","setStatus","setStandard","handleStatus","value","checked","calculateStatus","mergeWeight","RER","FACTOR","ageParseMonth","factorCalculate","DER","Math","round","WATER","minimun","maximun","prevAction","nextAction","getCalculateStatus","onChange","className","htmlFor","DocterFit","DFpage","pet_name","member_id","myPet","setMyPet","owner","AgeFit","ageData","setAgeData","getAgeDataAxios","useFetchAge","useHandleAgeData","targetAgeData","desc","min_age","mx_age","b","c","d","e","f","g","h","j","k","m","l","n","o","p","NoviGraphContainer","styled","div","DoctorFitPage","member_name","user","setUser","parseAgeToMonth","ageOfMonth","saveMyPetData","parseMonthAge","postMyPetData","post","then","res","catch","err","CustomH1","InputStatus","Button","h1","input","attrs","App","MainContainer","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"kQAsMeA,EAhHG,SAAC,GAA0B,IAAD,IAAvBC,YAAuB,MAAhB,GAAgB,EAAXC,EAAW,EAAXA,KAAW,EACFC,mBAASC,OAAOC,OAAOC,OADrB,mBACjCC,EADiC,KACpBC,EADoB,KAGlCC,EAAoB,WAAO,IACzBH,EAAUF,OAAOC,OAAjBC,MACNE,EAAeF,GACfI,QAAQC,IAAIL,GACZI,QAAQC,IAAIJ,IAQhB,OALEK,qBAAU,WAER,OADAR,OAAOS,iBAAiB,SAAUJ,GAC3B,kBAAML,OAAOU,oBAAoB,SAAUL,MACjD,IAGH,kBAAC,IAAD,CACIR,KAAMA,EACNC,KAAMA,EACNa,QAAQ,OACRC,OAAQ,CAAEC,IAAK,GAAIC,MAAO,IAAKC,OAAQ,GAAIC,KAAM,IACjDC,QAAS,GACTC,OAAQf,EAAc,KAAO,aAAe,WAC5CgB,OAAQ,CAAEC,OAAQ,QAElBC,KAAM,CACF,CACIC,GAAI,OACJC,KAAM,cACNC,WAAY,UACZC,MAAO,UACPC,KAAM,EACNT,QAAS,EACTU,SAAS,GAEb,CACIL,GAAI,QACJC,KAAM,eACNC,WAAY,UACZC,MAAO,UACPG,UAAW,GACXC,UAAW,EACXC,QAAS,KAiBjBC,YAAa,CAAEC,KAAM,QAASC,UAAW,CAAE,CAAE,SAAU,OACvDC,QAAS,KACTC,UAAW,KACXC,WAAY,CACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,OACRC,eAAgB,SAChBC,aAAc,IAElBC,SAAU,CACNN,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,SACRC,eAAgB,SAChBC,cAAe,IAEnBE,eAAgB,GAChBC,gBAAiB,GACjBC,eAAgB,CAAEd,KAAM,QAASC,UAAW,CAAE,CAAE,SAAU,OAC1Dc,QAAS,CACL,CACIC,SAAU,OACVC,OAAQ,eACRC,UAAW,SACXC,SAAS,EACTC,WAAY,IACZC,WAAY,EACZC,aAAc,EACdC,UAAW,IACXC,WAAY,GACZC,cAAe,gBACfC,YAAa,IACbC,WAAY,GACZC,QAAS,CACL,CACIC,GAAI,QACJC,MAAO,CACHJ,YAAa,OAMjCK,SAAS,EACTC,gBAAiB,GACjBC,cAAe,M,iBCjMVC,EAAU,wBCOjBC,EAAU,CACdC,OAAO,OACPlE,MAAO,QAoOMmE,MAjOf,YAAyC,IAAbC,EAAY,EAAZA,SAAY,EC4BZ,WAAM,MAINvE,mBAAS,MAJH,mBAIvBwE,EAJuB,KAIjBC,EAJiB,OAKEzE,mBAAS,MALX,mBAKvB0E,EALuB,KAKbC,EALa,KAkC9B,OA5BAlE,qBAAU,WACNF,QAAQC,IAAI,6BAEZ,IAAMoE,EAAY,uCAAG,8BAAAC,EAAA,+EA5BzB,IAAIC,SAAQ,SAAAC,GACRC,WAAU,sBAAC,4BAAAH,EAAA,sEACcI,IAAMC,IAAN,UAAaf,EAAb,oBADd,OACDgB,EADC,OAEPJ,EAAQ,CACJjF,KAAMqF,EAAOrF,OAHV,2CAKR,QAsBkB,gBAEEsF,EAFF,EAELtF,KACR2E,EAAQW,GACR7E,QAAQC,IAAI,oBAAqB4E,GAJpB,gDAMb7E,QAAQ8E,MAAR,MANa,yDAAH,qDAUZC,EAAgB,uCAAG,8BAAAT,EAAA,+EA5B7B,IAAIC,SAAQ,SAAAC,GACRC,WAAU,sBAAC,4BAAAH,EAAA,sEACcI,IAAMC,IAAN,UAAaf,EAAb,wBADd,OACDgB,EADC,OAEPJ,EAAQ,CACJjF,KAAMqF,EAAOrF,OAHV,2CAKR,QAsBsB,gBAEFsF,EAFE,EAETtF,KACR6E,EAAYS,GACZ7E,QAAQC,IAAI,wBAAyB4E,GAJpB,gDAMjB7E,QAAQ8E,MAAR,MANiB,yDAAH,qDAUtBT,IACAU,MAED,IAEI,CAACd,EAAME,GD7DSa,GADa,mBAC/Bf,EAD+B,KACzBE,EADyB,OAEd1E,mBAAS,IAFK,mBAE/BD,EAF+B,KAEzByF,EAFyB,OAGRxF,mBAAS,IAHD,mBAG/ByF,EAH+B,KAGtBC,EAHsB,OAIF1F,mBAAS,MAJP,mBAI/B2F,EAJ+B,KAInBC,EAJmB,OAKA5F,mBAAS,IALT,mBAK/B6F,EAL+B,KAKlBC,EALkB,OAMM9F,mBAAS,GANf,mBAM/B+F,EAN+B,KAOhCC,GAPgC,KAOb,CACrB,CACI,KAAQ,4BAEZ,CACI,KAAQ,sBAEZ,CACI,KAAQ,yBAEZ,CACI,KAAQ,yBAEZ,CACI,KAAQ,yBAEZ,CACI,KAAQ,yBAEZ,CACI,KAAQ,mBAEZ,CACI,KAAQ,eA9BsB,EAiCdhG,mBAASgG,GAjCK,mBAiC/BlG,EAjC+B,KAiCzBmG,EAjCyB,KAmChCC,EAAa,SAAC1E,EAAMD,GACxB,MAAW,SAAPC,EACKgD,EAAK2B,QAAO,SAAAC,GACjB,OAAOA,EAAM,KAAWC,SAAS9E,MAEnB,aAAPC,EACFkD,EAASyB,QAAO,SAAAC,GACrB,OAAOA,EAAM,KAAWC,SAAS9E,WAF9B,GAaH+E,EAAoB,SAACC,GAAW,IAE5BhF,EAAOgF,EAAMC,OAAbjF,GAF2B,EAGZ2E,EAAW,OAAQ3E,GAYvB,GATjBkF,EANiC,EAMjCA,KACAC,EAPiC,EAOjCA,QACAC,EARiC,EAQjCA,SACAC,EATiC,EASjCA,cACAC,EAViC,EAUjCA,UACAC,EAXiC,EAWjCA,YACAC,EAZiC,EAYjCA,UACAC,EAbiC,EAajCA,QACAC,EAdiC,EAcjCA,WAGIC,EArBuB,SAACR,GAC9B,OAAQnC,EAASmC,QAAQA,EAoBGS,CAAuBT,GAI/CU,EAAWtH,EAEf,GAAIsH,EAAS,GAAGC,eAAeZ,GAE7B,IAAI,IAAIa,EAAE,EAAGA,EAAEF,EAASG,OAAQD,WACvBF,EAASE,GAAGb,QAKrBW,EAAS,GAAGX,GAAQe,YAAYA,WAAWd,GAASQ,GAAqBO,QAAQ,IACjFL,EAAS,GAAGX,GAAQe,YAAYA,WAAWb,GAAUO,GAAqBO,QAAQ,IAClFL,EAAS,GAAGX,GAAQe,YAAYA,WAAWZ,GAAeM,GAAqBO,QAAQ,IACvFL,EAAS,GAAGX,GAAQe,YAAYA,WAAWX,GAAWK,GAAqBO,QAAQ,IACnFL,EAAS,GAAGX,GAAQe,YAAYA,WAAWV,GAAaI,GAAqBO,QAAQ,IACrFL,EAAS,GAAGX,GAAQe,YAAYA,WAAWT,GAAWG,GAAqBO,QAAQ,IACnFL,EAAS,GAAGX,GAAQe,YAAYA,WAAWR,GAASE,GAAqBO,QAAQ,IACjFL,EAAS,GAAGX,GAAQe,YAAYA,WAAWP,GAAYC,GAAqBO,QAAQ,IAEtF7B,EAAcsB,GACdjB,EAAQmB,GAER7G,QAAQC,IAAI,eAAM4G,GAClB7G,QAAQC,IAAI,eAAMiG,GAIbW,EAAS,GAAGC,eAAeZ,GAM9Bf,EAAW,CAACe,KALZf,EAAW,IACXI,EAAe,IACfG,EAAQD,GACRJ,EAAc,QAMZ8B,EAAqB,uCAAG,WAAMnB,GAAN,yCAAA1B,EAAA,6DAEpBtD,EAAOgF,EAAMC,OAAbjF,GAFoB,SAGK2E,EAAW,WAAY3E,GAH5B,OAyB5B,GAtBMoG,EAHsB,SAkBxBA,EAAmB,GATrBlB,EAT0B,EAS1BA,KACAC,EAV0B,EAU1BA,QACAC,EAX0B,EAW1BA,SACAC,EAZ0B,EAY1BA,cACAC,EAb0B,EAa1BA,UACAC,EAd0B,EAc1BA,YACAC,EAf0B,EAe1BA,UACAC,EAhB0B,EAgB1BA,QACAC,EAjB0B,EAiB1BA,YAMEG,EAAWtH,GAEF,GAAGuH,eAAeZ,GAK7B,IAHAX,EAAeD,EAAYM,QAAO,SAAAyB,GAAI,OAAIA,IAASnB,MAG3Ca,EAAE,EAAGA,EAAEF,EAASG,OAAQD,WACvBF,EAASE,GAAGb,QAIrBW,EAAS,GAAGX,GAAQe,YAAYA,WAAWd,GAASX,GAAgB0B,QAAQ,IAC5EL,EAAS,GAAGX,GAAQe,YAAYA,WAAWb,GAAUZ,GAAgB0B,QAAQ,IAC7EL,EAAS,GAAGX,GAAQe,YAAYA,WAAWZ,GAAeb,GAAgB0B,QAAQ,IAClFL,EAAS,GAAGX,GAAQe,YAAYA,WAAWX,GAAWd,GAAgB0B,QAAQ,IAC9EL,EAAS,GAAGX,GAAQe,YAAYA,WAAWV,GAAaf,GAAgB0B,QAAQ,IAChFL,EAAS,GAAGX,GAAQe,YAAYA,WAAWT,GAAWhB,GAAgB0B,QAAQ,IAC9EL,EAAS,GAAGX,GAAQe,YAAYA,WAAWR,GAASjB,GAAgB0B,QAAQ,IAC5EL,EAAS,GAAGX,GAAQe,YAAYA,WAAWP,GAAYlB,GAAgB0B,QAAQ,IAE/E3B,EAAe,GAAD,mBAAKD,GAAL,CAAkBY,KAGlCR,EAAQmB,GA/CoB,2CAAH,sDA4E3B,OA1BA3G,qBAAU,WAERF,QAAQC,IAAI,OAAOV,GAQnB0F,GACE,IAAIqC,OAAQC,OAAOrC,EAASI,IAG9BtF,QAAQC,IAAI,YAAaiF,GACzBlF,QAAQC,IAAI,gBAAiBqF,KAE5B,CAAC/F,EAAM2F,EAASI,IAUjB,6BAEE,6CAFF,iBAGOtB,EAASkC,KAHhB,IAGsB,6BAHtB,kDAIelC,EAASmC,QAJxB,QAIqC,6BAJrC,kDAKenC,EAASoC,SALxB,MAKuD,EAAlBpC,EAASoC,SAL9C,OAK6D,6BAL7D,kDAMepC,EAASqC,cANxB,KAMwC,6BANxC,kDAOerC,EAASsC,UAPxB,KAOoC,6BAPpC,kDAQetC,EAASuC,YARxB,KAQsC,6BARtC,kDASevC,EAASwC,UATxB,KASoC,6BATpC,4CAUcxC,EAASyC,QAVvB,KAUiC,6BAVjC,sCAWazC,EAAS0C,WAXtB,KAWmC,6BACjC,yBAAKlD,MAAOK,GACV,kBAAC2D,EAAD,CAAWjI,KAAMA,EAAMC,KAAMA,KAK/B,6BACG4F,GAAU,iGAA6BA,EAA7B,MAEb,6BACE,4CACCnB,GAAQA,EAAKwD,KAAI,SAAAlI,GAAI,OACpB,4BAAQmI,IAAKnI,EAAKyB,GAAIA,GAAIzB,EAAKyB,GAAI2G,QAAS5B,GAAoBxG,EAAK2G,SACvE,6BAJF,MAIW,6BAJX,MAIoB,6BAJpB,MAI6B,6BAJ7B,MAIsC,6BACpC,kDALF,IAKe,8EACZ/B,GAAYA,EAASsD,KAAI,SAAAlI,GAAI,OAC5B,4BAAQmI,IAAKnI,EAAKyB,GAAIA,GAAIzB,EAAKyB,GAAI2G,QAASR,GAAwB5H,EAAK2G,SAC3E,6BARF,MAQW,6BARX,MAQoB,6BARpB,MAQ6B,6BAR7B,MAQsC,6BAEpC,4BAAQyB,QAvCG,WACfjC,EAAQD,GACRR,EAAQ,IACRE,EAAW,IACXI,EAAe,MAmCX,sCE9LOqC,MAtCf,WAGI,IAAMC,EAAmB,SAAC7B,GAAW,IACzBhF,EAAOgF,EAAMC,OAAbjF,GAERhB,QAAQC,IAAI,oCAGZP,OAAOoI,OAAOC,YAAY,CAAEC,UAAYhH,EAAIiH,gBAJ3B,KAIyD,MAOxEC,EAAiB,SAAClC,GACpBhG,QAAQC,IAAI,yCACZD,QAAQC,IAAI+F,EAAMzG,MAClBS,QAAQC,IAAI,kBAAoB+F,EAAMmC,SAQ1C,OALAjI,qBAAU,WAEN,OADAR,OAAOS,iBAAiB,UAAW+H,GAC5B,kBAAMxI,OAAOU,oBAAoB,UAAW8H,OAInD,oCACI,4BAAQlH,GAAG,MAAM2G,QAASE,GAA1B,+EACA,6BACA,4BAAQ7G,GAAG,MAAM2G,QAASE,GAA1B,2ECqTGO,MAnVf,WAAkB,MAEQ3I,mBAAS,GAFjB,mBAET4I,EAFS,KAEHC,EAFG,OAGY7I,mBAAS,CACnC8I,KAAM,EACNC,KAAM,EACNC,QAAS,EACTC,QAAS,EACTC,gBAAgB,EAChBC,WAAY,GACZC,YAAY,IAVE,mBAGTC,EAHS,KAGDC,EAHC,KAYRR,EAAyEO,EAAzEP,KAAMC,EAAmEM,EAAnEN,KAAMC,EAA6DK,EAA7DL,QAASC,EAAoDI,EAApDJ,QAASC,EAA2CG,EAA3CH,eAAgBC,EAA2BE,EAA3BF,WAAYC,EAAeC,EAAfD,WAZlD,EAmBgBpJ,mBAAS,CACvCyG,KAAM,GACNC,QAAS,GACTC,SAAU,GACVC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,UAAW,GACXC,QAAS,GACTC,WAAY,KA5BE,mBAmBT1C,EAnBS,KAmBCgF,EAnBD,KA+BVC,EAAe,SAACjD,GAEpB,IAAMC,EAASD,EAAMC,OACbC,EAASD,EAATC,KACFgD,EAAwB,eAAhBjD,EAAOC,MAAyC,mBAAhBD,EAAOC,KAA4BD,EAAOkD,QAAUlD,EAAOiD,MAEzGH,EAAU,eACLD,EADI,eAEN5C,EAAOgD,MAiCNE,EAAkB,WAKtB,IAAMC,EAAcpC,WAAWwB,EAAQ,IAAIC,GACrCY,EAAoB,GAAdD,EAAmB,GAC/BrJ,QAAQC,IAAI,SAAWqJ,GACvBtJ,QAAQC,IAAI,cAAeoJ,GAC3B,IAAME,EAtCgB,WACtB,IAAMC,EAAuB,GAAPjB,EAAYC,EAElC,MAAmB,QAAfI,EACK,EAEU,WAAfA,EACK,IAELY,GAAiB,EACZ,EAEAA,GAAiB,IAAMX,EACvB,EAEAW,GAAiB,GACpBb,EACK,IAGA,IAIF,IAcMc,GAiBf,MAAO,CAAEC,IANGC,KAAKC,MAAMN,EAAMC,GAMfM,MAJA,CACZC,QAASH,KAAKC,MAAoB,GAAdP,GACpBU,QAASJ,KAAKC,MAAoB,IAAdP,MAsBlBW,EAAa,SAAChE,GACM,qBAApBA,EAAMC,OAAOjF,GACfsH,EAAQD,EAAO,GAEjBC,EAAQD,EAAO,IAGX4B,EAAa,WACjB3B,EAAQD,EAAO,IAuBjB,OAlBAnI,qBAAU,WAERF,QAAQC,IAAI6I,KACX,CAAC9E,EAAUuE,EAAMC,EAAOM,IAE3B5I,qBAAU,WACE,IAAPmI,KApCsB,WAAO,IAAD,EAENe,IAAfM,EAFqB,EAErBA,IAAKG,EAFgB,EAEhBA,MACbb,EAAY,CACV9C,KAAM,qDACNC,QAASuD,EACTtD,SAAUyD,EAAMC,QAChBzD,cAAe,IACfC,UAAW,IACXC,YAAa,IACbC,UAAW,IACXC,QAAS,IACTC,WAAY,MAyBdwD,GACAlK,QAAQC,IAAI,iBACZwE,YAAW,WACT6D,EAAQ,KACP,QAEJ,CAACD,IAKS,IAATA,EAEE,mDAEI,4BAAQ8B,SAAUlB,EAAc/C,KAAK,OAAOlF,GAAG,aAAakI,MAAOX,GAC/D,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,uCAEJ,0CACA,4BAAQ4B,SAAUlB,EAAc/C,KAAK,OAAOlF,GAAG,aAAakI,MAAOV,GAC/D,4BAAQU,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,mBACA,4BAAQA,MAAM,KAAd,oBAGJ,6BAEA,4BAAQiB,SAAUlB,EAAc/C,KAAK,UAAUlF,GAAG,gBAAgBkI,MAAOT,GACrE,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,uCAEJ,qCACA,4BAAQ0B,SAAUlB,EAAc/C,KAAK,UAAUlF,GAAG,gBAAgBkI,MAAOR,GACrE,4BAAQQ,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,SAGJ,6BACA,6BACCT,GAAWF,EAAO,4BAAQZ,QAASsC,GAAjB,gBAA2C,GAE9D,kBAAC,EAAD,OAIG,IAAT5B,EAEA,oCACE,yBAAK+B,UAAU,IACX,6BACE,2BAAOD,SAAUlB,EAAchI,KAAK,QAAQkI,QAAwB,SAAfP,EAAsC5H,GAAG,OAAOkF,KAAK,aAAagD,MAAM,SAC7H,2BAAOmB,QAAQ,QAAf,6BAGF,6BACE,2BAAOF,SAAUlB,EAAchI,KAAK,QAAQkI,QAAwB,aAAfP,EAA0C5H,GAAG,WAAWkF,KAAK,aAAagD,MAAM,aACrI,2BAAOmB,QAAQ,YAAf,mCAGF,6BACE,2BAAOF,SAAUlB,EAAchI,KAAK,QAAQkI,QAAwB,WAAfP,EAAwC5H,GAAG,SAASkF,KAAK,aAAagD,MAAM,WACjI,2BAAOmB,QAAQ,UAAf,6BAGF,6BACE,2BAAOF,SAAUlB,EAAchI,KAAK,QAAQkI,QAAwB,QAAfP,EAAqC5H,GAAG,MAAMkF,KAAK,aAAagD,MAAM,QAC3H,2BAAOmB,QAAQ,OAAf,8BAGJ,6BAtBJ,iCA0BI,2BAAOF,SAAUlB,EAAchI,KAAK,WAAWiF,KAAK,iBAAiBiD,QAASR,IAC9E,6BAEA,2BAAO0B,QAAQ,cAAf,6BACA,2BAAOF,SAAUlB,EAAchI,KAAK,WAAWiF,KAAK,aAAaiD,QAASN,IAC1E,6BAEA,4BAAQlB,QAASqC,GAAjB,gBACA,4BAAQrC,QAASsC,GAAjB,iBAIK,IAAT5B,EAEF,oCACE,uDAIS,IAATA,EAEF,oCACE,0DAAYE,EAAZ,UAAoBC,EAApB,gBACA,+DAAYC,EAAZ,IAAsBC,EAAtB,OACA,+DAAYC,EAAiB,qBAAQ,wBACrC,4CAAQC,GAAyB,yCACjC,yDAAWC,EAAa,eAAO,kBAE/B,kBAAC,EAAD,CAAkB7E,SAAUA,IAC5B,4BAAQ2D,QAASqC,EAAYhJ,GAAG,oBAAhC,sBAVJ,GC3TasJ,MARf,WACI,OACI,kDCkXOC,MAjXf,WAAmB,IAAD,EACQ9K,mBAAS,GADjB,mBACT4I,EADS,KACHC,EADG,OAEY7I,mBAAS,CACnC+K,SAAU,GACVjC,KAAM,EACNC,KAAM,EACNC,QAAS,EACTC,QAAS,EACTC,gBAAgB,EAChBC,WAAY,GACZC,YAAY,IAVE,mBAETC,EAFS,KAEDC,EAFC,KAYRyB,EAAmF1B,EAAnF0B,SAAUjC,EAAyEO,EAAzEP,KAAMC,EAAmEM,EAAnEN,KAAMC,EAA6DK,EAA7DL,QAASC,EAAoDI,EAApDJ,QAASC,EAA2CG,EAA3CH,eAAgBC,EAA2BE,EAA3BF,WAAYC,EAAeC,EAAfD,WAZ5D,EAagBpJ,mBAAS,CACvCyG,KAAM,GACNC,QAAS,GACTC,SAAU,GACVC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,UAAW,GACXC,QAAS,GACTC,WAAY,KAtBE,mBAaT1C,EAbS,KAaCgF,EAbD,KAyBVC,EAAe,SAACjD,GAEpB,IAAMC,EAASD,EAAMC,OACbC,EAASD,EAATC,KACFgD,EAAwB,eAAhBjD,EAAOC,MAAyC,mBAAhBD,EAAOC,KAA4BD,EAAOkD,QAAUlD,EAAOiD,MAEzGH,EAAU,eACLD,EADI,eAEN5C,EAAOgD,MAiCNE,EAAkB,WAKtB,IAAMC,EAAcpC,WAAWwB,EAAQ,IAAIC,GACrCY,EAAoB,GAAdD,EAAmB,GAGzBE,EAtCgB,WACtB,IAAMC,EAAuB,GAAPjB,EAAYC,EAElC,MAAmB,QAAfI,EACK,EAEU,WAAfA,EACK,IAELY,GAAiB,EACZ,EAEAA,GAAiB,IAAMX,EACvB,EAEAW,GAAiB,GACpBb,EACK,IAGA,IAIF,IAcMc,GAiBf,MAAO,CAAEC,IANGC,KAAKC,MAAMN,EAAMC,GAMfM,MAJA,CACZC,QAASH,KAAKC,MAAoB,GAAdP,GACpBU,QAASJ,KAAKC,MAAoB,IAAdP,MAsBlBW,EAAa,SAAChE,GACM,qBAApBA,EAAMC,OAAOjF,GACfsH,EAAQD,EAAO,GAEjBC,EAAQD,EAAO,IAGX4B,EAAa,WACjB3B,EAAQD,EAAO,IAKjBnI,qBAAU,WAERF,QAAQC,IAAI6I,KACX,CAAC9E,EAAUuE,EAAMC,EAAOM,IAE3B5I,qBAAU,WACE,IAAPmI,KApCsB,WAAO,IAAD,EAENe,IAAfM,EAFqB,EAErBA,IAAKG,EAFgB,EAEhBA,MACbb,EAAY,CACV9C,KAAM,qDACNC,QAASuD,EACTtD,SAAUyD,EAAMC,QAChBzD,cAAe,IACfC,UAAW,IACXC,YAAa,IACbC,UAAW,IACXC,QAAS,IACTC,WAAY,MAyBdwD,GAEAzF,YAAW,WACT6D,EAAQ,KACP,QAEJ,CAACD,IA1IY,MA6IU5I,mBAAS,CACjCgL,UAAW,8BA9IG,mBA6ITC,EA7IS,KA6IFC,EA7IE,KAiJVzC,EAAiB,SAAClC,GAAW,IACzByE,EAAczE,EAAMzG,KAApBkL,UACRE,EAAS,CACPC,MAAOH,IAETzK,QAAQC,IAAI,yCACZD,QAAQC,IAAI+F,EAAMzG,MAClBS,QAAQC,IAAI,kBAAoB+F,EAAMmC,SAYxC,OATAjI,qBAAU,WAEN,OADAR,OAAOS,iBAAiB,UAAW+H,GAC5B,kBAAMxI,OAAOU,oBAAoB,UAAW8H,MACpD,IAEHhI,qBAAU,WACRF,QAAQC,IAAI,iBAASyK,KACpB,CAACA,IAES,IAATrC,EAEA,oCACE,2BAAOpH,KAAK,OAAOkJ,SAAUlB,EAAc/C,KAAK,WAAWgD,MAAOsB,IAEjEA,GAAY,4BAAQ7C,QAASsC,GAAjB,iBAIN,IAAT5B,EAEE,mDAEI,4BAAQ8B,SAAUlB,EAAc/C,KAAK,OAAOlF,GAAG,aAAakI,MAAOX,GAC/D,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,uCAEJ,0CACA,4BAAQ4B,SAAUlB,EAAc/C,KAAK,OAAOlF,GAAG,aAAakI,MAAOV,GAC/D,4BAAQU,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,mBACA,4BAAQA,MAAM,KAAd,oBAGJ,6BAEA,4BAAQiB,SAAUlB,EAAc/C,KAAK,UAAUlF,GAAG,gBAAgBkI,MAAOT,GACrE,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,uCAEJ,qCACA,4BAAQ0B,SAAUlB,EAAc/C,KAAK,UAAUlF,GAAG,gBAAgBkI,MAAOR,GACrE,4BAAQQ,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,SAGJ,6BACA,6BAGA,4BAAQvB,QAASqC,GAAjB,gBACCvB,GAAWF,EAAO,4BAAQZ,QAASsC,GAAjB,gBAA2C,IAK3D,IAAT5B,EAEA,oCACE,yBAAK+B,UAAU,IACX,6BACE,2BAAOD,SAAUlB,EAAchI,KAAK,QAAQkI,QAAwB,SAAfP,EAAsC5H,GAAG,OAAOkF,KAAK,aAAagD,MAAM,SAC7H,2BAAOmB,QAAQ,QAAf,6BAGF,6BACE,2BAAOF,SAAUlB,EAAchI,KAAK,QAAQkI,QAAwB,aAAfP,EAA0C5H,GAAG,WAAWkF,KAAK,aAAagD,MAAM,aACrI,2BAAOmB,QAAQ,YAAf,mCAGF,6BACE,2BAAOF,SAAUlB,EAAchI,KAAK,QAAQkI,QAAwB,WAAfP,EAAwC5H,GAAG,SAASkF,KAAK,aAAagD,MAAM,WACjI,2BAAOmB,QAAQ,UAAf,6BAGF,6BACE,2BAAOF,SAAUlB,EAAchI,KAAK,QAAQkI,QAAwB,QAAfP,EAAqC5H,GAAG,MAAMkF,KAAK,aAAagD,MAAM,QAC3H,2BAAOmB,QAAQ,OAAf,8BAGJ,6BAtBJ,iCA0BI,2BAAOF,SAAUlB,EAAchI,KAAK,WAAWiF,KAAK,iBAAiBiD,QAASR,IAC9E,6BAEA,2BAAO0B,QAAQ,cAAf,6BACA,2BAAOF,SAAUlB,EAAchI,KAAK,WAAWiF,KAAK,aAAaiD,QAASN,IAC1E,6BAEA,4BAAQlB,QAASqC,GAAjB,gBACA,4BAAQrC,QAASsC,GAAjB,iBAIK,IAAT5B,EAEF,oCACE,uDAIS,IAATA,EAEF,oCACE,2BAAImC,EAAJ,gDACA,0DAAYjC,EAAZ,UAAoBC,EAApB,gBACA,+DAAYC,EAAZ,IAAsBC,EAAtB,OACA,+DAAYC,EAAiB,qBAAQ,wBACrC,4CAAQC,GAAyB,yCACjC,yDAAWC,EAAa,eAAO,kBAG/B,4BAAQlB,QAASqC,EAAYhJ,GAAG,oBAAhC,gBAGA,kBAAC,EAAD,YAdJ,G,QC5Oa1B,EAjHG,SAAC,GAA0B,IAAD,IAAvBC,YAAuB,MAAhB,GAAgB,EAAXC,EAAW,EAAXA,KAAW,EACFC,mBAASC,OAAOC,OAAOC,OADrB,mBACjCC,EADiC,KACpBC,EADoB,KAGlCC,EAAoB,WAAO,IACzBH,EAAUF,OAAOC,OAAjBC,MACNE,EAAeF,GACfI,QAAQC,IAAIL,GACZI,QAAQC,IAAIJ,IAQhB,OALEK,qBAAU,WAER,OADAR,OAAOS,iBAAiB,SAAUJ,GAC3B,kBAAML,OAAOU,oBAAoB,SAAUL,MACjD,IAIH,kBAAC,IAAD,CACIR,KAAMA,EACNC,KAAMA,EACNa,QAAQ,OACRC,OAAQ,CAAEC,IAAK,GAAIC,MAAO,IAAKC,OAAQ,GAAIC,KAAM,IACjDC,QAAS,GACTC,OAAQf,EAAc,KAAO,aAAe,WAC5CgB,OAAQ,CAAEC,OAAQ,QAElBC,KAAM,CACF,CACIC,GAAI,OACJC,KAAM,cACNC,WAAY,UACZC,MAAO,UACPC,KAAM,EACNT,QAAS,EACTU,SAAS,GAEb,CACIL,GAAI,QACJC,KAAM,eACNC,WAAY,UACZC,MAAO,UACPG,UAAW,GACXC,UAAW,EACXC,QAAS,KAiBjBC,YAAa,CAAEC,KAAM,QAASC,UAAW,CAAE,CAAE,SAAU,OACvDC,QAAS,KACTC,UAAW,KACXC,WAAY,CACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,OACRC,eAAgB,SAChBC,aAAc,IAElBC,SAAU,CACNN,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,SACRC,eAAgB,SAChBC,cAAe,IAEnBE,eAAgB,GAChBC,gBAAiB,GACjBC,eAAgB,CAAEd,KAAM,QAASC,UAAW,CAAE,CAAE,SAAU,OAC1Dc,QAAS,CACL,CACIC,SAAU,OACVC,OAAQ,eACRC,UAAW,SACXC,SAAS,EACTC,WAAY,IACZC,WAAY,EACZC,aAAc,EACdC,UAAW,IACXC,WAAY,GACZC,cAAe,gBACfC,YAAa,IACbC,WAAY,GACZC,QAAS,CACL,CACIC,GAAI,QACJC,MAAO,CACHJ,YAAa,OAMjCK,SAAS,EACTC,gBAAiB,GACjBC,cAAe,M,4GCuCRkH,MAhJf,YAA8B,IAAX/B,EAAU,EAAVA,OAAU,ECSF,WAAM,MAICrJ,mBAAS,MAJV,mBAItBqL,EAJsB,KAIbC,EAJa,KAqB7B,OAhBA7K,qBAAU,WACNF,QAAQC,IAAI,4BACS,uCAAG,8BAAAqE,EAAA,+EAhB5B,IAAIC,SAAQ,SAAAC,GACRC,WAAU,sBAAC,4BAAAH,EAAA,sEACcI,IAAMC,IAAN,UAAaf,EAAb,eADd,OACDgB,EADC,OAEPJ,EAAQ,CACJjF,KAAMqF,EAAOrF,OAHV,2CAKR,QAUqB,gBAEDsF,EAFC,EAERtF,KACRwL,EAAWlG,GACX7E,QAAQC,IAAI,mBAAoB4E,GAJhB,gDAMhB7E,QAAQ8E,MAAR,MANgB,yDAAH,oDAUrBkG,KAED,IAEI,CAACF,GD7BUG,GAAXH,EADkB,oBAEjBF,EAAgC9B,EAAhC8B,MAAOJ,EAAyB1B,EAAzB0B,SAAUjC,EAAeO,EAAfP,KAAMC,EAASM,EAATN,KAFN,EAuDD/I,mBAlDC,CACrB,CACI,KAAQ,gBAEZ,CACI,KAAQ,gBAEZ,CACI,KAAQ,UAEZ,CACI,KAAQ,gBAEZ,CACI,KAAQ,gBAEZ,CACI,KAAQ,gBAEZ,CACI,KAAQ,gBAEZ,CACI,KAAQ,UAEZ,CACI,KAAQ,sBAEZ,CACI,KAAQ,gBAEZ,CACI,KAAQ,kCAEZ,CACI,KAAQ,4BAEZ,CACI,KAAQ,kCAEZ,CACI,KAAQ,sBAEZ,CACI,KAAQ,gBAEZ,CACI,KAAQ,wBApDS,mBAuDlBF,EAvDkB,KAuDZmG,EAvDY,OAwDDjG,mBAAS,IAxDR,mBAwDlBD,EAxDkB,KAwDZyF,EAxDY,KA0DzB/E,qBAAU,WAEF4K,IACA9K,QAAQC,IAAI,iBACZD,QAAQC,IAAI6K,MAEjB,CAACA,IAEJ,IAOMI,EAAmB,SAAClF,GAAW,IAE3BmF,EATS,SAACnK,GAChB,OAAO8J,EAAQlF,QAAO,SAAAC,GAClB,OAAOA,EAAM,KAAWC,SAAS9E,MAOf2E,CADPK,EAAMC,OAAbjF,IAERhB,QAAQC,IAAIkL,GAHoB,MA0B5BA,EAAc,GApBdjF,EAN4B,EAM5BA,KAIA5B,GAV4B,EAO5B8G,KAP4B,EAQ5BC,QAR4B,EAS5BC,OAT4B,EAU5BhH,GACAiH,EAX4B,EAW5BA,EACAC,EAZ4B,EAY5BA,EACAC,EAb4B,EAa5BA,EACAC,EAd4B,EAc5BA,EACAC,EAf4B,EAe5BA,EACAC,EAhB4B,EAgB5BA,EACAC,EAjB4B,EAiB5BA,EACA9E,EAlB4B,EAkB5BA,EACA+E,EAnB4B,EAmB5BA,EACAC,EApB4B,EAoB5BA,EACAC,EArB4B,EAqB5BA,EACAC,EAtB4B,EAsB5BA,EACAC,EAvB4B,EAuB5BA,EACAC,EAxB4B,EAwB5BA,EACAC,EAzB4B,EAyB5BA,EAGAvF,EAAWtH,EACfS,QAAQC,IAAI4G,GACZA,EAAS,GAAGX,GAAQe,WAAW3C,GAC/BuC,EAAS,GAAGX,GAAQe,WAAWsE,GAC/B1E,EAAS,GAAGX,GAAQe,WAAWuE,GAC/B3E,EAAS,GAAGX,GAAQe,WAAWwE,GAC/B5E,EAAS,GAAGX,GAAQe,WAAWyE,GAC/B7E,EAAS,GAAGX,GAAQe,WAAW0E,GAC/B9E,EAAS,GAAGX,GAAQe,WAAW2E,GAC/B/E,EAAS,GAAGX,GAAQe,WAAW4E,GAC/BhF,EAAS,GAAGX,GAAQe,WAAWF,GAC/BF,EAAS,GAAGX,GAAQe,WAAW6E,GAC/BjF,EAAS,IAAIX,GAAQe,WAAW8E,GAChClF,EAAS,IAAIX,GAAQe,WAAW+E,GAChCnF,EAAS,IAAIX,GAAQe,WAAWgF,GAChCpF,EAAS,IAAIX,GAAQe,WAAWiF,GAChCrF,EAAS,IAAIX,GAAQe,WAAWkF,GAChCtF,EAAS,IAAIX,GAAQe,WAAWmF,GAEhC1G,EAAQmB,GACR5B,EAAQ,CAACiB,KAKb,OACI,oCAEK4E,GAAWA,EAAQrD,KAAI,SAAAlI,GAAI,OAAI,4BAAQoI,QAASuD,EAAkBlK,GAAIzB,EAAKyB,IAAKzB,EAAK2G,SACrF0E,EACAJ,EACAjC,EALL,UAKaC,EALb,eAQI,6BACA,kBAAC6D,EAAD,KACI,kBAAC,EAAD,CAAW9M,KAAMA,EAAMC,KAAMA,OASvC6M,EAAqBC,IAAOC,IAAV,K,mcEsDTC,MArMf,WAA2B,IAAD,EACE/M,mBAAS,CAC7BgL,UAAW,cACXgC,YAAa,iBAHK,mBACfC,EADe,KACTC,EADS,KAMdlC,EAA4BiC,EAA5BjC,UAAYgC,EAAgBC,EAAhBD,YANE,EAkBMhN,mBAXP,CAAC,CACdmL,MAAO,GACPJ,SAAU,GACVjC,KAAM,IACNC,KAAM,OAXQ,mBAkBfM,EAlBe,KAkBPC,EAlBO,KAoBPyB,GAAyB1B,EAAhC8B,MAAgC9B,EAAzB0B,UAAUjC,EAAeO,EAAfP,KAAMC,EAASM,EAATN,KAEzBS,EAAe,SAACjD,GAElB,IAAMC,EAASD,EAAMC,OACbC,EAASD,EAATC,KACFgD,EAAwB,eAAhBjD,EAAOC,MAAyC,mBAAhBD,EAAOC,KAA4BD,EAAOkD,QAAUlD,EAAOiD,MAEzGlJ,QAAQC,IAAI,CAACiG,IACblG,QAAQC,IAAIiJ,GACZH,EAAU,eACLD,EADI,eAEN5C,EAAOgD,MAIRhB,EAAiB,SAAClC,GAGpBhG,QAAQC,IAAI+F,EAAMzG,MAHY,MAIKyG,EAAMzG,KAAjCkL,EAJsB,EAItBA,UAAWgC,EAJW,EAIXA,YACnBzM,QAAQC,IAAI,iBACZ0M,EAAQ,CACJlC,UAAWA,EACXgC,YAAaA,IAGjB1D,EAAU,eACHD,EADE,CAEL8B,MAAOH,MAQfvK,qBAAU,WAGN,OADAR,OAAOS,iBAAiB,UAAW+H,GAC5B,kBAAMxI,OAAOU,oBAAoB,UAAW8H,MAClD,IA7DiB,MAqEEzI,mBAAS,GArEX,mBAqEf4I,EArEe,KAqETC,EArES,KAmFhBsE,EAAkB,WACpB,IAAIC,EAAa,EAOjB,OANItE,IACAsE,GAA6B,GAAf/G,SAASyC,IAEvBC,IACAqE,GAAc/G,SAAS0C,IAEpBqE,GAILC,EAAa,uCAAG,8BAAAxI,EAAA,sDAIZyI,EAAgBH,IAEhBI,EAAgB,CAClB,MAASvC,EAAW,KAAQgC,EAAa,IAAOM,EAAe,OAAU,UAI7ErI,IAAMuI,KAAN,UAAcrJ,EAAd,UAA+BoJ,GACNE,MAAK,SAAAC,GAAG,OAAGnN,QAAQC,IAAIkN,EAAI5N,SAC3B6N,OAAM,SAAAC,GAAG,OAAGrN,QAAQC,IAAI,qBAAOoN,MAExDrN,QAAQC,IAAI+M,GAfM,2CAAH,qDA2BnB,OAPA9M,qBAAU,WAENF,QAAQC,IAAI,SAASyM,GACrB1M,QAAQC,IAAI,WAAW6I,KACxB,CAAC4D,EAAM5D,IAGG,IAATT,EAEI,oCACI,kBAACiF,EAAD,KAAWb,GAAe,6BAAMA,EAAN,2CAD9B,eAII,4BAAQtC,SAAUlB,EAAc/C,KAAK,OAAOlF,GAAG,aAAakI,MAAOX,GAC/D,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,uCAEJ,0CACA,4BAAQ4B,SAAUlB,EAAc/C,KAAK,OAAOlF,GAAG,aAAakI,MAAOV,GAC/D,4BAAQU,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,kBACA,4BAAQA,MAAM,KAAd,mBACA,4BAAQA,MAAM,KAAd,oBAGJ,kBAACoE,EAAD,yFAA0B,+CAE1B,kBAACC,EAAD,CAAapD,SAAUlB,EAAc/C,KAAK,WAAWgD,MAAOsB,IAE3DA,GAAY,kBAACgD,EAAD,CAAQ7F,QAvGd,WACfW,EAAQD,EAAO,KAsGM,sFAGb,4BAAQV,QAASmF,GAAjB,kCAKC,IAATzE,EAEI,oCACI,kBAAC,EAAD,CAAQS,OAAQA,UAH5B,GAaEwE,EAAWhB,IAAOmB,GAAV,KAIRF,EAAcjB,IAAOoB,MAAMC,MAAM,CACnC1M,KAAM,QADUqL,CAAH,KASXkB,EAASlB,IAAOC,IAAV,K,gMC5MGqB,MAbf,WACE,OACE,yBAAKxD,UAAU,OACb,kBAACyD,EAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxB,IACjC,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,OAAOC,UAAWzD,IACpC,kBAAC,IAAD,CAAOuD,OAAK,EAACC,KAAK,SAASC,UAAW5F,OAUxCyF,EAAgBvB,IAAOC,IAAV,K,SClBnB0B,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4a503247.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ResponsiveBar } from '@nivo/bar';\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst datas = [\r\n    {\r\n      \"nutrient\": \"칼로리\",\r\n      \"촉촉 사료\": 598,\r\n    //   \"촉촉 사료Color\": \"hsl(266, 70%, 50%)\",\r\n      \"영양제 temp\": 51,\r\n    //   \"영양제 tempColor\": \"hsl(202, 70%, 50%)\",\r\n      \"간식 temp\": 23,\r\n    //   \"간식 tempColor\": \"hsl(41, 70%, 50%)\",\r\n      },\r\n    {\r\n      \"nutrient\": \"수분량\",\r\n      \"촉촉 사료\": 322,\r\n    //   \"촉촉 사료Color\": \"hsl(230, 70%, 50%)\",\r\n      \"영양제 temp\": 13,\r\n    //   \"영양제 tempColor\": \"hsl(295, 70%, 50%)\",\r\n      \"간식 temp\": 5,\r\n    //   \"간식 tempColor\": \"hsl(123, 70%, 50%)\",\r\n      },\r\n    {\r\n      \"nutrient\": \"조단백\",\r\n      \"촉촉 사료\": 39,\r\n    //   \"촉촉 사료Color\": \"hsl(313, 70%, 50%)\",\r\n      \"영양제 temp\": 13,\r\n    //   \"영양제 tempColor\": \"hsl(121, 70%, 50%)\",\r\n      \"간식 temp\": 71,\r\n    //   \"간식 tempColor\": \"hsl(64, 70%, 50%)\",\r\n      },\r\n    {\r\n      \"nutrient\": \"조지방\",\r\n      \"촉촉 사료\": 35,\r\n    //   \"촉촉 사료Color\": \"hsl(145, 70%, 50%)\",\r\n      \"영양제 temp\": 100,\r\n    //   \"영양제 tempColor\": \"hsl(116, 70%, 50%)\",\r\n      \"간식 temp\": 143,\r\n    //   \"간식 tempColor\": \"hsl(115, 70%, 50%)\",\r\n      },\r\n    {\r\n      \"nutrient\": \"조섬유\",\r\n      \"촉촉 사료\": 150,\r\n    //   \"촉촉 사료Color\": \"hsl(285, 70%, 50%)\",\r\n      \"영양제 temp\": 100,\r\n    //   \"영양제 tempColor\": \"hsl(264, 70%, 50%)\",\r\n      \"간식 temp\": 156,\r\n    //   \"간식 tempColor\": \"hsl(337, 70%, 50%)\",\r\n      },\r\n    {\r\n      \"nutrient\": \"조회분\",\r\n      \"촉촉 사료\": 179,\r\n    //   \"촉촉 사료Color\": \"hsl(275, 70%, 50%)\",\r\n      \"영양제 temp\": 100,\r\n    //   \"영양제 tempColor\": \"hsl(256, 70%, 50%)\",\r\n      \"간식 temp\": 188,\r\n    //   \"간식 tempColor\": \"hsl(341, 70%, 50%)\",\r\n      },\r\n    {\r\n      \"nutrient\": \"칼슘\",\r\n      \"촉촉 사료\": 169,\r\n    //   \"촉촉 사료Color\": \"hsl(115, 70%, 50%)\",\r\n      \"영양제 temp\": 163,\r\n    //   \"영양제 tempColor\": \"hsl(232, 70%, 50%)\",\r\n      \"간식 temp\": 119,\r\n    //   \"간식 tempColor\": \"hsl(159, 70%, 50%)\",\r\n      },\r\n    {\r\n      \"nutrient\": \"인\",\r\n      \"촉촉 사료\": 169,\r\n    //   \"촉촉 사료Color\": \"hsl(115, 70%, 50%)\",\r\n      \"영양제 temp\": 163,\r\n    //   \"영양제 tempColor\": \"hsl(232, 70%, 50%)\",\r\n      \"간식 temp\": 119,\r\n    //   \"간식 tempColor\": \"hsl(159, 70%, 50%)\",\r\n       }\r\n  ]\r\n// console.log(datas)\r\n\r\n// 여기에 data가 없을 시 initialFormat을 정의해서, step3을 없애자!\r\n\r\n\r\nconst NoviGraph = ({ data = [] , keys }) => {\r\n    const [screenWidth, setScreenWidth] = useState(window.screen.width);\r\n\r\n    const handleScreenWidth = () => {\r\n      let { width } = window.screen;\r\n      setScreenWidth(width)\r\n      console.log(width)\r\n      console.log(screenWidth)\r\n    }\r\n    // 반응형 그래프 생김새!\r\n    useEffect(()=>{\r\n      window.addEventListener('resize', handleScreenWidth)\r\n      return () => window.removeEventListener('resize', handleScreenWidth)\r\n    }, [])\r\n\r\n  return (\r\n    <ResponsiveBar\r\n        data={data}\r\n        keys={keys}\r\n        indexBy=\"item\"\r\n        margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n        padding={0.3}\r\n        layout={screenWidth < 1024 ? \"horizontal\" : \"vertical\"}\r\n        colors={{ scheme: 'nivo' }}\r\n        // defs => 위아래\r\n        defs={[\r\n            {\r\n                id: 'dots',\r\n                type: 'patternDots',\r\n                background: 'inherit',\r\n                color: '#38bcb2',\r\n                size: 4,\r\n                padding: 1,\r\n                stagger: true\r\n            },\r\n            {\r\n                id: 'lines',\r\n                type: 'patternLines',\r\n                background: 'inherit',\r\n                color: '#eed312',\r\n                rotation: -45,\r\n                lineWidth: 6,\r\n                spacing: 10\r\n            }\r\n        ]}\r\n        // fill={[\r\n        //     {\r\n        //         match: {\r\n        //             id: 'fries'\r\n        //         },\r\n        //         id: 'dots'\r\n        //     },\r\n        //     {\r\n        //         match: {\r\n        //             id: '간식 temp'\r\n        //         },\r\n        //         id: 'lines'\r\n        //     }\r\n        // ]}\r\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'item',\r\n            legendPosition: 'middle',\r\n            legendOffset: 32\r\n        }}\r\n        axisLeft={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'amount',\r\n            legendPosition: 'middle',\r\n            legendOffset: -40\r\n        }}\r\n        labelSkipWidth={12}\r\n        labelSkipHeight={12}\r\n        labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n        legends={[\r\n            {\r\n                dataFrom: 'keys',\r\n                anchor: 'bottom-right',\r\n                direction: 'column',\r\n                justify: false,\r\n                translateX: 120,\r\n                translateY: 0,\r\n                itemsSpacing: 2,\r\n                itemWidth: 100,\r\n                itemHeight: 20,\r\n                itemDirection: 'left-to-right',\r\n                itemOpacity: 0.85,\r\n                symbolSize: 20,\r\n                effects: [\r\n                    {\r\n                        on: 'hover',\r\n                        style: {\r\n                            itemOpacity: 1\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n        animate={true}\r\n        motionStiffness={90}\r\n        motionDamping={15}\r\n    />\r\n  )\r\n}\r\n\r\nexport default NoviGraph;","export const BACKEND = \"http://127.0.0.1:8000\";\r\n// export const BACKEND = \"https://petdy-test-backend-tedhoon.endpoint.ainize.ai\";","import React, { useEffect, useState } from 'react';\r\nimport NoviGraph from './Novi';\r\nimport { useFetchData } from '../../Hooks/useFetchData';\r\n\r\n// 플로우를, 처음에 기준 그래프를 띄워주는게 아니라\r\n// 사료나 간식을 선택하면, 빨간줄, limit를 생성해주자. + 양 미세조정 가능하게.\r\n\r\nconst tempStyle={\r\n  height:\"90vh\", \r\n  width: \"90vw\"\r\n}\r\n\r\nfunction AmountCalculator({ standard }) {\r\n  const [feed, nutrient] = useFetchData();\r\n  const [keys, setKeys] = useState([]);\r\n  const [feedKey, setFeedKey] = useState([]);\r\n  const [feedAmount, setFeedAmount] = useState(null);\r\n  const [nutrientKey, setNutrientKey] = useState([]);\r\n  const [nutrinetAmount, setNutrientAmount] = useState(5)\r\n  const initialDataState = [\r\n      {\r\n          \"item\": \"칼로리(Kcal)\",\r\n      },\r\n      {\r\n          \"item\": \"수분량\",\r\n      },\r\n      {\r\n          \"item\": \"조단백(g)\",\r\n      },\r\n      {\r\n          \"item\": \"조지방(g)\",\r\n      },\r\n      {\r\n          \"item\": \"조섬유(g)\",\r\n      },\r\n      {\r\n          \"item\": \"조회분(g)\",\r\n      },\r\n      {\r\n          \"item\": \"칼슘(g)\",\r\n      },\r\n      {\r\n          \"item\": \"인(g)\",\r\n      }\r\n    ]\r\n  const [data, setData] = useState(initialDataState)\r\n\r\n  const filterData = (type, id) => {\r\n    if (type===\"feed\") {\r\n      return feed.filter(object => {\r\n        return object['id'] === parseInt(id)\r\n      })\r\n    } else if (type===\"nutrient\") {\r\n      return nutrient.filter(object => {\r\n        return object['id'] === parseInt(id)\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  // 사료 급여 적정량 인디케이터 환산\r\n  const calFeedAmountIndicator = (calorie) => {\r\n    return (standard.calorie/calorie)\r\n  }\r\n\r\n  const useHandleFeedData = (event) => {\r\n    \r\n    const { id } = event.target;\r\n    const targetFeedData = filterData(\"feed\", id)\r\n    // 넣을껀 target id를 가진 하나의 것이다.\r\n    const { \r\n      name,\r\n      calorie,\r\n      moisture,\r\n      crude_protein,\r\n      crude_fat,\r\n      crude_fiber,\r\n      crude_ash,\r\n      calcium,\r\n      phosphorus\r\n    } = targetFeedData[0];\r\n    \r\n    const feedAmountIndicator = calFeedAmountIndicator(calorie)\r\n    // console.log(\"cal\" , calorie)\r\n    // console.log(data)\r\n\r\n    let tempData = data\r\n\r\n    if (tempData[0].hasOwnProperty(name)) {\r\n      // key 값이 있는지 확인\r\n      for(let i=0; i<tempData.length; i++) {\r\n        delete tempData[i][name]\r\n      }\r\n    } else {\r\n\r\n      // 추천값 곱하고 소숫점 2자리 수에서 반올림, toFixed를 쓰면 string이 되기 때문에 연산 후 Float 형변환\r\n      tempData[0][name] = parseFloat((parseFloat(calorie)*feedAmountIndicator).toFixed(2))\r\n      tempData[1][name] = parseFloat((parseFloat(moisture)*feedAmountIndicator).toFixed(2))\r\n      tempData[2][name] = parseFloat((parseFloat(crude_protein)*feedAmountIndicator).toFixed(2))\r\n      tempData[3][name] = parseFloat((parseFloat(crude_fat)*feedAmountIndicator).toFixed(2))\r\n      tempData[4][name] = parseFloat((parseFloat(crude_fiber)*feedAmountIndicator).toFixed(2))\r\n      tempData[5][name] = parseFloat((parseFloat(crude_ash)*feedAmountIndicator).toFixed(2))\r\n      tempData[6][name] = parseFloat((parseFloat(calcium)*feedAmountIndicator).toFixed(2))\r\n      tempData[7][name] = parseFloat((parseFloat(phosphorus)*feedAmountIndicator).toFixed(2))\r\n    }\r\n    setFeedAmount(feedAmountIndicator)\r\n    setData(tempData)\r\n\r\n    console.log(\"템데\", tempData)\r\n    console.log(\"네임\", name)\r\n    // 템데에 네임이 없으면 ? => \r\n\r\n    // 그니까 내가 하고싶은건 1 -> 2 누르는건 상관없는데 다시 1누르면 안되는거\r\n    if (!tempData[0].hasOwnProperty(name)) {\r\n      setFeedKey([])\r\n      setNutrientKey([])\r\n      setData(initialDataState)\r\n      setFeedAmount(null)\r\n    } else {\r\n      setFeedKey([name])\r\n    }  \r\n  };\r\n\r\n  const useHandleNutrientData = async(event) => {\r\n    // 여기서 setData로 초기화?\r\n    const { id } = event.target;\r\n    const targetNutrientData = await filterData(\"nutrient\", id)\r\n\r\n    // console.log(targetNutrientData)\r\n\r\n    // 넣을껀 target id를 가진 하나의 것이다.\r\n    const { \r\n      name,\r\n      calorie,\r\n      moisture,\r\n      crude_protein,\r\n      crude_fat,\r\n      crude_fiber,\r\n      crude_ash,\r\n      calcium,\r\n      phosphorus\r\n    } = targetNutrientData[0];\r\n    \r\n    // console.log(\"cal\" , calorie)\r\n    // console.log(data)\r\n\r\n    let tempData = data\r\n\r\n    if (tempData[0].hasOwnProperty(name)) {\r\n      // key 지워주자\r\n      setNutrientKey(nutrientKey.filter(item => item !== name))\r\n\r\n      // key 값이 있는지 확인\r\n      for(let i=0; i<tempData.length; i++) {\r\n        delete tempData[i][name]\r\n      }\r\n    } else {\r\n      // 추천값 곱하고 소숫점 2자리 수에서 반올림\r\n      tempData[0][name] = parseFloat((parseFloat(calorie)*nutrinetAmount).toFixed(2))\r\n      tempData[1][name] = parseFloat((parseFloat(moisture)*nutrinetAmount).toFixed(2))\r\n      tempData[2][name] = parseFloat((parseFloat(crude_protein)*nutrinetAmount).toFixed(2))\r\n      tempData[3][name] = parseFloat((parseFloat(crude_fat)*nutrinetAmount).toFixed(2))\r\n      tempData[4][name] = parseFloat((parseFloat(crude_fiber)*nutrinetAmount).toFixed(2))\r\n      tempData[5][name] = parseFloat((parseFloat(crude_ash)*nutrinetAmount).toFixed(2))\r\n      tempData[6][name] = parseFloat((parseFloat(calcium)*nutrinetAmount).toFixed(2))\r\n      tempData[7][name] = parseFloat((parseFloat(phosphorus)*nutrinetAmount).toFixed(2))\r\n    \r\n      setNutrientKey([...nutrientKey, name])\r\n    }\r\n    // console.log(tempData)\r\n    setData(tempData)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(\"작동\")\r\n    console.log(\"data\",data)\r\n    // console.log(\"위아래\")\r\n    // console.log(\"standard\", standard)\r\n    // feed & nutrient 합치게 생성\r\n    // let mergeKeys = new Array();\r\n    // mergeKeys = mergeKeys.concat(feedKey, nutrientKey)\r\n    // setKeys(mergeKeys) \r\n\r\n    setKeys(\r\n      new Array().concat(feedKey, nutrientKey)\r\n    )\r\n\r\n    console.log(\"feed keys\", feedKey)\r\n    console.log(\"nutrient Keys\", nutrientKey)\r\n\r\n  }, [data, feedKey, nutrientKey])\r\n\r\n  const useReset = () => {\r\n    setData(initialDataState);\r\n    setKeys([])\r\n    setFeedKey([])\r\n    setNutrientKey([])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <h2>standard data</h2>\r\n      이름: {standard.name} <br />\r\n      적정(기준) 칼로리: {standard.calorie} kcal<br />\r\n      적정(기준) 수분량: {standard.moisture} ~ {standard.moisture*2} ml <br />\r\n      적정(기준) 단백질: {standard.crude_protein} g<br />\r\n      적정(기준) 조지방: {standard.crude_fat} g<br />\r\n      적정(기준) 조섬유: {standard.crude_fiber} g<br />\r\n      적정(기준) 조회분: {standard.crude_ash} g<br />\r\n      적정(기준) 칼슘: {standard.calcium} g<br />\r\n      적정(기준) 인: {standard.phosphorus} g<br />\r\n      <div style={tempStyle}>\r\n        <NoviGraph data={data} keys={keys} />\r\n\r\n      </div>\r\n      \r\n\r\n      <div>\r\n        {feedAmount && `칼로리 기준 1일 사료 급여 추천량 : ${feedAmount}g`}\r\n      </div>\r\n      <div>\r\n        <h1>사료</h1>\r\n        {feed && feed.map(data=> \r\n          <button key={data.id} id={data.id} onClick={useHandleFeedData}>{data.name}</button>)}\r\n        <br />   <br />   <br />   <br />   <br />   \r\n        <h1>영양제</h1> <h3>현재는 모두 5g기준</h3>\r\n        {nutrient && nutrient.map(data=> \r\n          <button key={data.id} id={data.id} onClick={useHandleNutrientData}>{data.name}</button>)}\r\n        <br />   <br />   <br />   <br />   <br />   \r\n\r\n        <button onClick={useReset}>전체 초기화</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AmountCalculator;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BACKEND } from '../config';\r\n// 추후 React.memo 최적화하기 << 일단 useEffect로 했숨\r\n\r\n// data를 fetch후 가공해서 알맞은 format으로 바꿔주는 hook\r\n\r\n// [{\r\n//     \"nutrient\": \"\",\r\n//     \"타겟1: \"값\",\r\n// /\r\n//     \"타겟2: \"값\",\r\n// /     ...\r\n//     }\r\n//     ...  \r\n// ]\r\n\r\n// \"사료이름\" : 값,\r\n// \"영양제이름\": 값\r\n\r\nconst mockAsyncFeedData = () => \r\n    new Promise(resolve => {\r\n        setTimeout(async function() {\r\n            const result = await axios.get(`${BACKEND}/exchangedfeed/`)\r\n            resolve({\r\n                data: result.data\r\n            })\r\n        }, 100)\r\n    })\r\n\r\nconst mockAsyncNutrientData = () => \r\n    new Promise(resolve => {\r\n        setTimeout(async function() {\r\n            const result = await axios.get(`${BACKEND}/exchangednutrient/`)\r\n            resolve({\r\n                data: result.data\r\n            })\r\n        }, 100)\r\n    })\r\n\r\nexport const useFetchData = () => {\r\n    // console.log(\"중복호출 막아야한다\")\r\n    // 일단 data에 feed만 담아서 해봅시당 \r\n    // data는 object여야 함\r\n    const [feed, setFeed] = useState(null)\r\n    const [nutrient, setNutrient] = useState(null)\r\n    useEffect(() => {\r\n        console.log(\"useFetchData 호출\")\r\n         // mockAsyncData 호출 및 데이터 set\r\n        const getFeedAxios = async () => {\r\n            try {\r\n                const { data : fetchedData } = await mockAsyncFeedData();\r\n                setFeed(fetchedData);\r\n                console.log(\"fetched feed data\", fetchedData)\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        };\r\n\r\n        const getNutrientAxios = async () => {\r\n            try {\r\n                const { data : fetchedData } = await mockAsyncNutrientData();\r\n                setNutrient(fetchedData);\r\n                console.log(\"fetched nutrient data\", fetchedData)\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        };\r\n\r\n        getFeedAxios();\r\n        getNutrientAxios();\r\n    \r\n    }, [])\r\n   \r\n    return [feed, nutrient]\r\n}","import React, { useEffect } from 'react';\r\n\r\n\r\nfunction AddBasket() {\r\n\r\n\r\n    const sendBasketSignal = (event) => {  \r\n        const { id } = event.target;\r\n        const category = 144;\r\n        console.log('자식창 로드!');  \r\n  \r\n        //targetWindow.postMessage(message, targetOrigin, [transfer]);\r\n        window.parent.postMessage({ target_id : id, target_category : category }, '*');\r\n\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     sendMessageToParent();\r\n    // })\r\n    const receiveMessage = (event) => {\r\n        console.log('parent message!!!!!!!!!!!!!!!!!!!!!!!');\r\n        console.log(event.data); // { childData : 'test data' }\r\n        console.log(\"event.origin : \" + event.origin); // http://123.com(자식창 도메인)        \r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"message\", receiveMessage)\r\n        return () => window.removeEventListener(\"message\", receiveMessage)\r\n    })\r\n    \r\n    return (\r\n        <>\r\n            <button id=\"248\" onClick={sendBasketSignal}>관절 처방사료 장바구니 담기</button>\r\n            <br />\r\n            <button id=\"251\" onClick={sendBasketSignal}>실리콘 커버 장바구니 담기</button>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default AddBasket;","import React, { useState, useEffect } from 'react';\r\nimport AmountCalculator from '../Components/AmountCalculator/AmountCalculator';\r\nimport AddBasket from '../Components/AddBasket';\r\n\r\nfunction ACpage() {\r\n  // const [age, setAge] = useState(''); // checkbox로 n년 m개월로 가야하나..\r\n  const [step, setStep] = useState(1)\r\n  const [status, setStatus] = useState({\r\n    age1: 0,\r\n    age2: 0,\r\n    weight1: 0,\r\n    weight2: 0,\r\n    neutralization: false,\r\n    bodyFormat: \"\",\r\n    ispregnant: false,\r\n  })\r\n  const { age1, age2, weight1, weight2, neutralization, bodyFormat, ispregnant } = status;\r\n\r\n  // const [weight, setWeight] = useState('');  // n . m kg?\r\n  // const [neutralization, setNeutralization] = useState(false) // 중성화 여부\r\n  // const [bodyFormat, setBodyFormat] = useState('') // 체형(비만, 뚱뚱.. etc)\r\n  // const [ispregnant, setPregnant] = useState(false) // 임신여부\r\n  // 활발해요? < 이건 아직 필요를 모르겠음\r\n  const [standard, setStandard] = useState({\r\n    name: \"\",\r\n    calorie: \"\", \r\n    moisture: \"\",\r\n    crude_protein: \"\",\r\n    crude_fat: \"\",\r\n    crude_fiber: \"\",\r\n    crude_ash: \"\",\r\n    calcium: \"\",\r\n    phosphorus: \"\" \r\n  })\r\n\r\n  const handleStatus = (event) => {\r\n\r\n    const target = event.target;\r\n    const { name } = target;\r\n    const value = target.name === 'ispregnant' || target.name === 'neutralization' ? target.checked : target.value;\r\n    \r\n    setStatus({\r\n      ...status,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  const factorCalculate = () => {\r\n    const ageParseMonth = age1 * 12 + age2\r\n    // FACTOR 계산기\r\n    if (bodyFormat === \"fat\") {\r\n      return 1\r\n    } \r\n    if (bodyFormat === \"chubby\") {\r\n      return 1.4\r\n    } \r\n    if (ageParseMonth <= 4) {\r\n      return 3;\r\n    } \r\n    else if (ageParseMonth <= 12 || ispregnant) {\r\n      return 2; // 임신시 중성화 조건은 당연히 pass일거고, 1.8 or 1.4인데 , 만약 뚱뚱할경우 + 임신이면 => 1 또는 1.4가 나와버리는데 ispregnant condition을 bodyFormat위로 빼야하나? 이건 조건을 물어봐야할 것 같음\r\n    }\r\n    else if (ageParseMonth <= 84) {\r\n      if (neutralization) {\r\n        return 1.6\r\n      }\r\n      else {\r\n        return 1.8\r\n      }\r\n    }\r\n    else {\r\n      return 1.4\r\n    } \r\n  }\r\n\r\n\r\n  const calculateStatus = () => {\r\n    // DER = RER X Factor\r\n    // DER(일일 권장 칼로리)\r\n    // RER(기초 대사 칼로리)\r\n    // weigth * 30 + 70 (kcal)\r\n    const mergeWeight = parseFloat(weight1+'.'+weight2)\r\n    const RER = mergeWeight * 30 + 70\r\n    console.log(\"RER : \" , RER)\r\n    console.log(\"mergeWeight\", mergeWeight)\r\n    const FACTOR = factorCalculate()\r\n    // console.log(FACTOR)\r\n\r\n    // WATER => weight X 50~100\r\n    // let FACTOR = 1\r\n \r\n\r\n    \r\n    // 근데 여기서 건식, 습식을 나눠버리믄.\r\n    // 사료량이랑 비교해줬을 때 어떻게 해야하지.......흠\r\n    // 나누지 말고 통일할까\r\n    const DER = Math.round(RER * FACTOR);\r\n    // 습식은 DER * 0.7\r\n    const WATER = {\r\n      minimun: Math.round(mergeWeight * 50),\r\n      maximun: Math.round(mergeWeight * 100)\r\n    };\r\n    return { DER, WATER }\r\n  } \r\n\r\n  const getCalculateStatus = () => {\r\n      \r\n      const { DER, WATER } = calculateStatus();\r\n      setStandard({\r\n        name: '맞춤 영양소 제공량',\r\n        calorie: DER, \r\n        moisture: WATER.minimun,\r\n        crude_protein: 100,\r\n        crude_fat: 100,\r\n        crude_fiber: 100,\r\n        crude_ash: 100,\r\n        calcium: 100,\r\n        phosphorus: 100 \r\n      })\r\n  }\r\n\r\n\r\n  const prevAction = (event) => {\r\n    if (event.target.id === \"result_page_prev\"){\r\n      setStep(step - 2)\r\n    } else {\r\n    setStep(step - 1)\r\n  }\r\n  }\r\n  const nextAction = () => {\r\n    setStep(step + 1)\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // console.log(standard)\r\n    console.log(status)\r\n  }, [standard, age1, age2 , status])\r\n\r\n  useEffect(() => {\r\n    if(step===3) {\r\n      getCalculateStatus()\r\n      console.log(\"계산!\")\r\n      setTimeout(() => {\r\n        setStep(4)\r\n      }, 250)\r\n    }\r\n  }, [step])\r\n\r\n  \r\n\r\n\r\n  if (step === 1)\r\n    return (\r\n        <>\r\n            나이\r\n            <select onChange={handleStatus} name=\"age1\" id=\"input-age1\" value={age1}>\r\n                <option>0</option>\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>4</option>\r\n                <option>5</option>\r\n                <option>6</option>\r\n                <option>7</option>\r\n                <option>8</option>\r\n                <option>9</option>\r\n                <option>10</option>\r\n                <option>11</option>\r\n                <option>12</option>\r\n                <option>13</option>\r\n                <option>14</option>\r\n                <option>15</option>\r\n                <option>16</option>\r\n                <option>17</option>\r\n                <option>18</option>\r\n                <option>19</option>\r\n                <option>20</option>\r\n                <option>21</option>\r\n                <option>22</option>\r\n                <option>23</option>\r\n                <option>24</option>\r\n                <option>25</option>\r\n                <option>26</option>\r\n                <option>27</option>\r\n                <option>28</option>\r\n                <option>29</option>\r\n                <option>30</option>\r\n            </select>\r\n            <strong>년</strong>\r\n            <select onChange={handleStatus} name=\"age2\" id=\"input-age2\" value={age2}>\r\n                <option value=\"0\">0 개월</option>\r\n                <option value=\"1\">1 개월</option>\r\n                <option value=\"2\">2 개월</option>\r\n                <option value=\"3\">3 개월</option>\r\n                <option value=\"4\">4 개월</option>\r\n                <option value=\"5\">5 개월</option>\r\n                <option value=\"6\">6 개월</option>\r\n                <option value=\"7\">7 개월</option>\r\n                <option value=\"8\">8 개월</option>\r\n                <option value=\"9\">9 개월</option>\r\n                <option value=\"9\">10 개월</option>\r\n                <option value=\"9\">11 개월</option>\r\n            </select>\r\n\r\n            <br />\r\n\r\n            <select onChange={handleStatus} name=\"weight1\" id=\"input-weight1\" value={weight1}>\r\n                <option>0</option>\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>4</option>\r\n                <option>5</option>\r\n                <option>6</option>\r\n                <option>7</option>\r\n                <option>8</option>\r\n                <option>9</option>\r\n                <option>10</option>\r\n                <option>11</option>\r\n                <option>12</option>\r\n                <option>13</option>\r\n                <option>14</option>\r\n                <option>15</option>\r\n                <option>16</option>\r\n                <option>17</option>\r\n                <option>18</option>\r\n                <option>19</option>\r\n                <option>20</option>\r\n                <option>21</option>\r\n                <option>22</option>\r\n                <option>23</option>\r\n                <option>24</option>\r\n                <option>25</option>\r\n                <option>26</option>\r\n                <option>27</option>\r\n                <option>28</option>\r\n                <option>29</option>\r\n                <option>30</option>\r\n                <option>31</option>\r\n                <option>32</option>\r\n                <option>33</option>\r\n                <option>34</option>\r\n                <option>35</option>\r\n                <option>36</option>\r\n                <option>37</option>\r\n                <option>38</option>\r\n                <option>39</option>\r\n                <option>40</option>\r\n                <option>41</option>\r\n                <option>42</option>\r\n                <option>43</option>\r\n                <option>44</option>\r\n                <option>45</option>\r\n            </select>\r\n            <strong>.</strong>\r\n            <select onChange={handleStatus} name=\"weight2\" id=\"input-weight2\" value={weight2}>\r\n                <option value=\"0\">0 kg</option>\r\n                <option value=\"1\">1 kg</option>\r\n                <option value=\"2\">2 kg</option>\r\n                <option value=\"3\">3 kg</option>\r\n                <option value=\"4\">4 kg</option>\r\n                <option value=\"5\">5 kg</option>\r\n                <option value=\"6\">6 kg</option>\r\n                <option value=\"7\">7 kg</option>\r\n                <option value=\"8\">8 kg</option>\r\n                <option value=\"9\">9 kg</option>\r\n            </select>\r\n\r\n            <br />\r\n            <br />\r\n            {weight1 && age1 ? <button onClick={nextAction}>다음</button> : \"\"}\r\n\r\n            <AddBasket />\r\n        </>\r\n    )\r\n    \r\n  if (step === 2)\r\n  return (\r\n      <>\r\n        <div className=\"\">\r\n            <div>\r\n              <input onChange={handleStatus} type=\"radio\" checked={bodyFormat === \"thin\" ? true : false} id=\"thin\" name=\"bodyFormat\" value=\"thin\" />\r\n              <label htmlFor=\"thin\">날씬해요</label>\r\n            </div>\r\n            \r\n            <div>\r\n              <input onChange={handleStatus} type=\"radio\" checked={bodyFormat === \"ordinary\" ? true : false} id=\"ordinary\" name=\"bodyFormat\" value=\"ordinary\" />\r\n              <label htmlFor=\"ordinary\">보통이에요</label>\r\n            </div>\r\n\r\n            <div>\r\n              <input onChange={handleStatus} type=\"radio\" checked={bodyFormat === \"chubby\" ? true : false} id=\"chubby\" name=\"bodyFormat\" value=\"chubby\" />\r\n              <label htmlFor=\"chubby\">통통해요</label>\r\n            </div>\r\n\r\n            <div>\r\n              <input onChange={handleStatus} type=\"radio\" checked={bodyFormat === \"fat\" ? true : false} id=\"fat\" name=\"bodyFormat\" value=\"fat\" />\r\n              <label htmlFor=\"fat\">뚱뚱해요</label>\r\n            </div>\r\n        </div>\r\n          <br />\r\n\r\n          중성화여부\r\n\r\n          <input onChange={handleStatus} type=\"checkbox\" name=\"neutralization\" checked={neutralization} />\r\n          <br />\r\n   \r\n          <label htmlFor=\"ispregnant\">임신 여부</label>\r\n          <input onChange={handleStatus} type=\"checkbox\" name=\"ispregnant\" checked={ispregnant} />\r\n          <br />\r\n          \r\n          <button onClick={prevAction}>이전</button>\r\n          <button onClick={nextAction}>다음</button>\r\n      </>\r\n  )\r\n\r\n  if (step === 3)  \r\n  return (\r\n    <>\r\n      <div>계산중...</div>\r\n    </>\r\n  )\r\n\r\n  if (step === 4) \r\n  return (\r\n    <>\r\n      <p>입력 나이 : {age1}년 {age2}개월</p>\r\n      <p>입력 몸무게: {weight1}.{weight2} kg</p>\r\n      <p>중성화 여부: {neutralization ? '중성화' : \"중성화 X\"}</p> \r\n      <p>체형: {bodyFormat? bodyFormat : \"선택하지 않음\"}</p>\r\n      <p>임신 여부: {ispregnant ? '임신' : '임신 X'}</p>\r\n\r\n      <AmountCalculator standard={standard} />\r\n      <button onClick={prevAction} id=\"result_page_prev\">이전</button>\r\n    </>\r\n    )\r\n\r\n\r\n\r\n  }\r\n\r\nexport default ACpage;\r\n","import React from \"react\";\r\n\r\nfunction DocterFit () {\r\n    return (\r\n        <>\r\n        sadasdsad\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DocterFit;","import React, { useState, useEffect } from 'react';\r\n// import AmountCalculator from '../Components/AmountCalculator/AmountCalculator';\r\nimport DocterFit from '../Components/DoctorFit';\r\n// import AddBasket from '../Components/AddBasket';\r\n\r\nfunction DFpage() {\r\n  const [step, setStep] = useState(0)\r\n  const [status, setStatus] = useState({\r\n    pet_name: \"\",\r\n    age1: 0,\r\n    age2: 0,\r\n    weight1: 0,\r\n    weight2: 0,\r\n    neutralization: false,\r\n    bodyFormat: \"\",\r\n    ispregnant: false,\r\n  })\r\n  const { pet_name, age1, age2, weight1, weight2, neutralization, bodyFormat, ispregnant } = status;\r\n  const [standard, setStandard] = useState({\r\n    name: \"\",\r\n    calorie: \"\", \r\n    moisture: \"\",\r\n    crude_protein: \"\",\r\n    crude_fat: \"\",\r\n    crude_fiber: \"\",\r\n    crude_ash: \"\",\r\n    calcium: \"\",\r\n    phosphorus: \"\" \r\n  })\r\n\r\n  const handleStatus = (event) => {\r\n\r\n    const target = event.target;\r\n    const { name } = target;\r\n    const value = target.name === 'ispregnant' || target.name === 'neutralization' ? target.checked : target.value;\r\n    \r\n    setStatus({\r\n      ...status,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  const factorCalculate = () => {\r\n    const ageParseMonth = age1 * 12 + age2\r\n    // FACTOR 계산기\r\n    if (bodyFormat === \"fat\") {\r\n      return 1\r\n    } \r\n    if (bodyFormat === \"chubby\") {\r\n      return 1.4\r\n    } \r\n    if (ageParseMonth <= 4) {\r\n      return 3;\r\n    } \r\n    else if (ageParseMonth <= 12 || ispregnant) {\r\n      return 2; // 임신시 중성화 조건은 당연히 pass일거고, 1.8 or 1.4인데 , 만약 뚱뚱할경우 + 임신이면 => 1 또는 1.4가 나와버리는데 ispregnant condition을 bodyFormat위로 빼야하나? 이건 조건을 물어봐야할 것 같음\r\n    }\r\n    else if (ageParseMonth <= 84) {\r\n      if (neutralization) {\r\n        return 1.6\r\n      }\r\n      else {\r\n        return 1.8\r\n      }\r\n    }\r\n    else {\r\n      return 1.4\r\n    } \r\n  }\r\n\r\n\r\n  const calculateStatus = () => {\r\n    // DER = RER X Factor\r\n    // DER(일일 권장 칼로리)\r\n    // RER(기초 대사 칼로리)\r\n    // weigth * 30 + 70 (kcal)\r\n    const mergeWeight = parseFloat(weight1+'.'+weight2)\r\n    const RER = mergeWeight * 30 + 70\r\n    // console.log(\"RER : \" , RER)\r\n    // console.log(\"mergeWeight\", mergeWeight)\r\n    const FACTOR = factorCalculate()\r\n    // console.log(FACTOR)\r\n\r\n    // WATER => weight X 50~100\r\n    // let FACTOR = 1\r\n \r\n\r\n    \r\n    // 근데 여기서 건식, 습식을 나눠버리믄.\r\n    // 사료량이랑 비교해줬을 때 어떻게 해야하지.......흠\r\n    // 나누지 말고 통일할까\r\n    const DER = Math.round(RER * FACTOR);\r\n    // 습식은 DER * 0.7\r\n    const WATER = {\r\n      minimun: Math.round(mergeWeight * 50),\r\n      maximun: Math.round(mergeWeight * 100)\r\n    };\r\n    return { DER, WATER }\r\n  } \r\n\r\n  const getCalculateStatus = () => {\r\n      \r\n      const { DER, WATER } = calculateStatus();\r\n      setStandard({\r\n        name: '맞춤 영양소 제공량',\r\n        calorie: DER, \r\n        moisture: WATER.minimun,\r\n        crude_protein: 100,\r\n        crude_fat: 100,\r\n        crude_fiber: 100,\r\n        crude_ash: 100,\r\n        calcium: 100,\r\n        phosphorus: 100 \r\n      })\r\n  }\r\n\r\n\r\n  const prevAction = (event) => {\r\n    if (event.target.id === \"result_page_prev\"){\r\n      setStep(step - 2)\r\n    } else {\r\n    setStep(step - 1)\r\n  }\r\n  }\r\n  const nextAction = () => {\r\n    setStep(step + 1)\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // console.log(standard)\r\n    console.log(status)\r\n  }, [standard, age1, age2 , status])\r\n\r\n  useEffect(() => {\r\n    if(step===3) {\r\n      getCalculateStatus()\r\n      // console.log(\"계산!\")\r\n      setTimeout(() => {\r\n        setStep(4)\r\n      }, 250)\r\n    }\r\n  }, [step])\r\n\r\n  \r\n  const [myPet, setMyPet] = useState({\r\n    member_id: \"아직 안됨\",\r\n  })\r\n\r\n  const receiveMessage = (event) => {\r\n    const { member_id } = event.data;\r\n    setMyPet({\r\n      owner: member_id,\r\n    })\r\n    console.log('parent message!!!!!!!!!!!!!!!!!!!!!!!');\r\n    console.log(event.data); // { childData : 'test data' }\r\n    console.log(\"event.origin : \" + event.origin); // http://123.com(자식창 도메인)        \r\n  }\r\n\r\n  useEffect(() => {\r\n      window.addEventListener(\"message\", receiveMessage)\r\n      return () => window.removeEventListener(\"message\", receiveMessage)\r\n  }, [])\r\n  \r\n  useEffect(() => {\r\n    console.log(\"마펫: \" , myPet)\r\n  }, [myPet])\r\n  \r\n  if (step === 0) \r\n    return (\r\n      <>\r\n        <input type=\"text\" onChange={handleStatus} name=\"pet_name\" value={pet_name} />\r\n      \r\n        {pet_name && <button onClick={nextAction}>다음</button>}\r\n      </>\r\n    )\r\n\r\n  if (step === 1)\r\n    return (\r\n        <>\r\n            나이\r\n            <select onChange={handleStatus} name=\"age1\" id=\"input-age1\" value={age1}>\r\n                <option>0</option>\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>4</option>\r\n                <option>5</option>\r\n                <option>6</option>\r\n                <option>7</option>\r\n                <option>8</option>\r\n                <option>9</option>\r\n                <option>10</option>\r\n                <option>11</option>\r\n                <option>12</option>\r\n                <option>13</option>\r\n                <option>14</option>\r\n                <option>15</option>\r\n                <option>16</option>\r\n                <option>17</option>\r\n                <option>18</option>\r\n                <option>19</option>\r\n                <option>20</option>\r\n                <option>21</option>\r\n                <option>22</option>\r\n                <option>23</option>\r\n                <option>24</option>\r\n                <option>25</option>\r\n                <option>26</option>\r\n                <option>27</option>\r\n                <option>28</option>\r\n                <option>29</option>\r\n                <option>30</option>\r\n            </select>\r\n            <strong>년</strong>\r\n            <select onChange={handleStatus} name=\"age2\" id=\"input-age2\" value={age2}>\r\n                <option value=\"0\">0 개월</option>\r\n                <option value=\"1\">1 개월</option>\r\n                <option value=\"2\">2 개월</option>\r\n                <option value=\"3\">3 개월</option>\r\n                <option value=\"4\">4 개월</option>\r\n                <option value=\"5\">5 개월</option>\r\n                <option value=\"6\">6 개월</option>\r\n                <option value=\"7\">7 개월</option>\r\n                <option value=\"8\">8 개월</option>\r\n                <option value=\"9\">9 개월</option>\r\n                <option value=\"9\">10 개월</option>\r\n                <option value=\"9\">11 개월</option>\r\n            </select>\r\n\r\n            <br />\r\n\r\n            <select onChange={handleStatus} name=\"weight1\" id=\"input-weight1\" value={weight1}>\r\n                <option>0</option>\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>4</option>\r\n                <option>5</option>\r\n                <option>6</option>\r\n                <option>7</option>\r\n                <option>8</option>\r\n                <option>9</option>\r\n                <option>10</option>\r\n                <option>11</option>\r\n                <option>12</option>\r\n                <option>13</option>\r\n                <option>14</option>\r\n                <option>15</option>\r\n                <option>16</option>\r\n                <option>17</option>\r\n                <option>18</option>\r\n                <option>19</option>\r\n                <option>20</option>\r\n                <option>21</option>\r\n                <option>22</option>\r\n                <option>23</option>\r\n                <option>24</option>\r\n                <option>25</option>\r\n                <option>26</option>\r\n                <option>27</option>\r\n                <option>28</option>\r\n                <option>29</option>\r\n                <option>30</option>\r\n                <option>31</option>\r\n                <option>32</option>\r\n                <option>33</option>\r\n                <option>34</option>\r\n                <option>35</option>\r\n                <option>36</option>\r\n                <option>37</option>\r\n                <option>38</option>\r\n                <option>39</option>\r\n                <option>40</option>\r\n                <option>41</option>\r\n                <option>42</option>\r\n                <option>43</option>\r\n                <option>44</option>\r\n                <option>45</option>\r\n            </select>\r\n            <strong>.</strong>\r\n            <select onChange={handleStatus} name=\"weight2\" id=\"input-weight2\" value={weight2}>\r\n                <option value=\"0\">0 kg</option>\r\n                <option value=\"1\">1 kg</option>\r\n                <option value=\"2\">2 kg</option>\r\n                <option value=\"3\">3 kg</option>\r\n                <option value=\"4\">4 kg</option>\r\n                <option value=\"5\">5 kg</option>\r\n                <option value=\"6\">6 kg</option>\r\n                <option value=\"7\">7 kg</option>\r\n                <option value=\"8\">8 kg</option>\r\n                <option value=\"9\">9 kg</option>\r\n            </select>\r\n\r\n            <br />\r\n            <br />\r\n\r\n            \r\n            <button onClick={prevAction}>이전</button>\r\n            {weight1 && age1 ? <button onClick={nextAction}>다음</button> : \"\"}\r\n\r\n        </>\r\n    )\r\n    \r\n  if (step === 2)\r\n  return (\r\n      <>\r\n        <div className=\"\">\r\n            <div>\r\n              <input onChange={handleStatus} type=\"radio\" checked={bodyFormat === \"thin\" ? true : false} id=\"thin\" name=\"bodyFormat\" value=\"thin\" />\r\n              <label htmlFor=\"thin\">날씬해요</label>\r\n            </div>\r\n            \r\n            <div>\r\n              <input onChange={handleStatus} type=\"radio\" checked={bodyFormat === \"ordinary\" ? true : false} id=\"ordinary\" name=\"bodyFormat\" value=\"ordinary\" />\r\n              <label htmlFor=\"ordinary\">보통이에요</label>\r\n            </div>\r\n\r\n            <div>\r\n              <input onChange={handleStatus} type=\"radio\" checked={bodyFormat === \"chubby\" ? true : false} id=\"chubby\" name=\"bodyFormat\" value=\"chubby\" />\r\n              <label htmlFor=\"chubby\">통통해요</label>\r\n            </div>\r\n\r\n            <div>\r\n              <input onChange={handleStatus} type=\"radio\" checked={bodyFormat === \"fat\" ? true : false} id=\"fat\" name=\"bodyFormat\" value=\"fat\" />\r\n              <label htmlFor=\"fat\">뚱뚱해요</label>\r\n            </div>\r\n        </div>\r\n          <br />\r\n\r\n          중성화여부\r\n\r\n          <input onChange={handleStatus} type=\"checkbox\" name=\"neutralization\" checked={neutralization} />\r\n          <br />\r\n   \r\n          <label htmlFor=\"ispregnant\">임신 여부</label>\r\n          <input onChange={handleStatus} type=\"checkbox\" name=\"ispregnant\" checked={ispregnant} />\r\n          <br />\r\n          \r\n          <button onClick={prevAction}>이전</button>\r\n          <button onClick={nextAction}>다음</button>\r\n      </>\r\n  )\r\n\r\n  if (step === 3)  \r\n  return (\r\n    <>\r\n      <div>계산중...</div>\r\n    </>\r\n  )\r\n\r\n  if (step === 4) \r\n  return (\r\n    <>\r\n      <p>{pet_name}이의 정보입니다.</p>\r\n      <p>입력 나이 : {age1}년 {age2}개월</p>\r\n      <p>입력 몸무게: {weight1}.{weight2} kg</p>\r\n      <p>중성화 여부: {neutralization ? '중성화' : \"중성화 X\"}</p> \r\n      <p>체형: {bodyFormat? bodyFormat : \"선택하지 않음\"}</p>\r\n      <p>임신 여부: {ispregnant ? '임신' : '임신 X'}</p>\r\n\r\n      {/* <AmountCalculator standard={standard} /> */}\r\n      <button onClick={prevAction} id=\"result_page_prev\">이전</button>\r\n\r\n\r\n      <DocterFit />\r\n    </>\r\n    )\r\n\r\n\r\n\r\n  }\r\n\r\nexport default DFpage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ResponsiveBar } from '@nivo/bar';\r\n\r\nconst NoviGraph = ({ data = [] , keys }) => {\r\n    const [screenWidth, setScreenWidth] = useState(window.screen.width);\r\n\r\n    const handleScreenWidth = () => {\r\n      let { width } = window.screen;\r\n      setScreenWidth(width)\r\n      console.log(width)\r\n      console.log(screenWidth)\r\n    }\r\n    // 반응형 그래프 생김새!\r\n    useEffect(()=>{\r\n      window.addEventListener('resize', handleScreenWidth)\r\n      return () => window.removeEventListener('resize', handleScreenWidth)\r\n    }, [])\r\n\r\n  return (\r\n      \r\n    <ResponsiveBar\r\n        data={data}\r\n        keys={keys}\r\n        indexBy=\"item\"\r\n        margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n        padding={0.3}\r\n        layout={screenWidth < 1024 ? \"horizontal\" : \"vertical\"}\r\n        colors={{ scheme: 'nivo' }}\r\n        // defs => 위아래\r\n        defs={[\r\n            {\r\n                id: 'dots',\r\n                type: 'patternDots',\r\n                background: 'inherit',\r\n                color: '#38bcb2',\r\n                size: 4,\r\n                padding: 1,\r\n                stagger: true\r\n            },\r\n            {\r\n                id: 'lines',\r\n                type: 'patternLines',\r\n                background: 'inherit',\r\n                color: '#eed312',\r\n                rotation: -45,\r\n                lineWidth: 6,\r\n                spacing: 10\r\n            }\r\n        ]}\r\n        // fill={[\r\n        //     {\r\n        //         match: {\r\n        //             id: 'fries'\r\n        //         },\r\n        //         id: 'dots'\r\n        //     },\r\n        //     {\r\n        //         match: {\r\n        //             id: '간식 temp'\r\n        //         },\r\n        //         id: 'lines'\r\n        //     }\r\n        // ]}\r\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'item',\r\n            legendPosition: 'middle',\r\n            legendOffset: 32\r\n        }}\r\n        axisLeft={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'amount',\r\n            legendPosition: 'middle',\r\n            legendOffset: -40\r\n        }}\r\n        labelSkipWidth={12}\r\n        labelSkipHeight={12}\r\n        labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n        legends={[\r\n            {\r\n                dataFrom: 'keys',\r\n                anchor: 'bottom-right',\r\n                direction: 'column',\r\n                justify: false,\r\n                translateX: 120,\r\n                translateY: 0,\r\n                itemsSpacing: 2,\r\n                itemWidth: 100,\r\n                itemHeight: 20,\r\n                itemDirection: 'left-to-right',\r\n                itemOpacity: 0.85,\r\n                symbolSize: 20,\r\n                effects: [\r\n                    {\r\n                        on: 'hover',\r\n                        style: {\r\n                            itemOpacity: 1\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n        animate={true}\r\n        motionStiffness={90}\r\n        motionDamping={15}\r\n    />\r\n  )\r\n}\r\n\r\nexport default NoviGraph;","import React, { useEffect, useState } from \"react\";\r\nimport { useFetchAge } from \"../../Hooks/useFetchAge\";\r\n// import NoviGraph from \"../NutrientFit/Novi\";\r\nimport NoviGraph from \"../Useful/Novi\";\r\nimport styled from 'styled-components';\r\n\r\nfunction AgeFit ({ status }) {\r\n    const [ageData] = useFetchAge();\r\n    const { owner, pet_name, age1, age2 } = status;\r\n\r\n    // 그래프 그릴 때 사용하는 state\r\n    const initialDataState = [\r\n        {\r\n            \"item\": \"피부\",\r\n        },\r\n        {\r\n            \"item\": \"관절\",\r\n        },\r\n        {\r\n            \"item\": \"눈\",\r\n        },\r\n        {\r\n            \"item\": \"심장\",\r\n        },\r\n        {\r\n            \"item\": \"신장\",\r\n        },\r\n        {\r\n            \"item\": \"방광\",\r\n        },\r\n        {\r\n            \"item\": \"치아\",\r\n        },\r\n        {\r\n            \"item\": \"간\",\r\n        },\r\n        {\r\n            \"item\": \"췌장염\",\r\n        },\r\n        {\r\n            \"item\": \"종양\",\r\n        },\r\n        {\r\n            \"item\": \"비타민결핍\",\r\n        },\r\n        {\r\n            \"item\": \"칼슘결핍\",\r\n        },\r\n        {\r\n            \"item\": \"면역력결핍\",\r\n        },\r\n        {\r\n            \"item\": \"장건강\",\r\n        },\r\n        {\r\n            \"item\": \"비만\",\r\n        },\r\n        {\r\n            \"item\": \"호흡기\",\r\n        }\r\n    ]\r\n    const [data, setData] = useState(initialDataState)\r\n    const [keys, setKeys] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // 디버깅용\r\n        if (ageData) {\r\n            console.log(\"AgeFit mount!\")\r\n            console.log(ageData)\r\n        }\r\n    }, [ageData])\r\n\r\n    const filterData = (id) => {\r\n        return ageData.filter(object => {\r\n            return object['id'] === parseInt(id)\r\n        })\r\n      }\r\n\r\n\r\n    const useHandleAgeData = (event) => {\r\n        const { id } = event.target;\r\n        const targetAgeData = filterData(id)\r\n        console.log(targetAgeData)\r\n        // 넣을껀 target id를 가진 하나의 것이다.\r\n        const {\r\n            name,\r\n            desc,\r\n            min_age,\r\n            mx_age, \r\n            a,\r\n            b,\r\n            c,\r\n            d,\r\n            e,\r\n            f,\r\n            g,\r\n            h,\r\n            i,\r\n            j,\r\n            k,\r\n            m,\r\n            l,\r\n            n,\r\n            o,\r\n            p\r\n        } = targetAgeData[0];\r\n        \r\n        let tempData = data;\r\n        console.log(tempData)\r\n        tempData[0][name] = parseFloat(a)\r\n        tempData[1][name] = parseFloat(b)\r\n        tempData[2][name] = parseFloat(c)\r\n        tempData[3][name] = parseFloat(d)\r\n        tempData[4][name] = parseFloat(e)\r\n        tempData[5][name] = parseFloat(f)\r\n        tempData[6][name] = parseFloat(g)\r\n        tempData[7][name] = parseFloat(h)\r\n        tempData[8][name] = parseFloat(i)\r\n        tempData[9][name] = parseFloat(j)\r\n        tempData[10][name] = parseFloat(k)\r\n        tempData[11][name] = parseFloat(m)\r\n        tempData[12][name] = parseFloat(l)\r\n        tempData[13][name] = parseFloat(n)\r\n        tempData[14][name] = parseFloat(o)\r\n        tempData[15][name] = parseFloat(p)\r\n\r\n        setData(tempData)\r\n        setKeys([name])\r\n        // 여기는 graph 띄워주는 함수!\r\n        // drawAgeGraph()\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n            {ageData && ageData.map(data => <button onClick={useHandleAgeData} id={data.id}>{data.name}</button>)}\r\n            {owner}\r\n            {pet_name}\r\n            {age1}년 {age2}개월\r\n\r\n\r\n            <br />\r\n            <NoviGraphContainer>\r\n                <NoviGraph data={data} keys={keys} />\r\n            </NoviGraphContainer>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AgeFit;\r\n\r\nconst NoviGraphContainer = styled.div`\r\n    height: 50vh;\r\n    width: 90vw;\r\n`;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BACKEND } from '../config';\r\n\r\n\r\nconst mockAsyncAgeData = () => \r\n    new Promise(resolve => {\r\n        setTimeout(async function() {\r\n            const result = await axios.get(`${BACKEND}/agerange/`)\r\n            resolve({\r\n                data: result.data\r\n            })\r\n        }, 1000)\r\n    })\r\n\r\nexport const useFetchAge = () => {\r\n    // console.log(\"중복호출 막아야한다\")\r\n    // 일단 data에 feed만 담아서 해봅시당 \r\n    // data는 object여야 함\r\n    const [ageData, setAgeData] = useState(null)\r\n    useEffect(() => {\r\n        console.log(\"useFetchAge 호출\")\r\n        const getAgeDataAxios = async () => {\r\n            try {\r\n                const { data : fetchedData } = await mockAsyncAgeData();\r\n                setAgeData(fetchedData);\r\n                console.log(\"fetched age data\", fetchedData)\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        };\r\n        \r\n        getAgeDataAxios();\r\n    \r\n    }, [])\r\n    \r\n    return [ageData]\r\n}","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n// import DocterFit from '../Components/DoctorFit';\r\nimport AgeFit from '../Components/DoctorFit/AgeFit.js';\r\nimport axios from \"axios\";\r\nimport { BACKEND } from '../config';\r\n// 이 컴포넌트에서는 유저 정보와 반려동물 정보를 저장하는 용도로 사용합니다!\r\n\r\n\r\nfunction DoctorFitPage () {\r\n    const [user, setUser] = useState({\r\n        member_id: \"drmamamaaaa\",\r\n        member_name: \"닥맘\",\r\n      })\r\n\r\n    const { member_id , member_name } = user;\r\n    const initialState = [{\r\n            owner: \"\",\r\n            pet_name: \"\",\r\n            age1: \"0\",\r\n            age2: \"0\",\r\n            // weight1: 0,\r\n            // weight2: 0,\r\n            // neutralization: false,\r\n            // bodyFormat: \"\",\r\n            // ispregnant: false,\r\n        }]\r\n    const [status, setStatus] = useState(initialState)\r\n\r\n    const { owner, pet_name, age1, age2 } = status;\r\n \r\n    const handleStatus = (event) => {\r\n        // 여러 input요소들을 저장하는 공간입니다!\r\n        const target = event.target;\r\n        const { name } = target;\r\n        const value = target.name === 'ispregnant' || target.name === 'neutralization' ? target.checked : target.value;\r\n        // console.log(...status)\r\n        console.log([name])\r\n        console.log(value)\r\n        setStatus({\r\n          ...status,\r\n          [name]: value\r\n        })\r\n      }\r\n      \r\n    const receiveMessage = (event) => {\r\n        // if (!event.data.source.includes('react-devtools') || event.data.source == undefined) {\r\n            // react-devtool 때문에 local에서 작동안되는거.... 디버깅모드!\r\n        console.log(event.data)\r\n        const { member_id, member_name } = event.data;\r\n        console.log(\"동작!\")\r\n        setUser({\r\n            member_id: member_id,\r\n            member_name: member_name,\r\n        })\r\n\r\n        setStatus({\r\n            ...status,\r\n            owner: member_id,\r\n        })\r\n        // }\r\n        // console.log('parent message!!!!!!!!!!!!!!!!!!!!!!!');\r\n        // console.log(event.data); // { childData : 'test data' }\r\n        // console.log(\"event.origin : \" + event.origin); // http://123.com(자식창 도메인)        \r\n      }\r\n    \r\n    useEffect(() => {\r\n        // drmamma 서비스에서 회원정보를 가져오는 eventListener 등록 및 해제입니다.\r\n        window.addEventListener(\"message\", receiveMessage)\r\n        return () => window.removeEventListener(\"message\", receiveMessage)\r\n      }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [step, setStep] = useState(0);\r\n\r\n    const prevAction = (event) => {\r\n        if (event.target.id === \"result_page_prev\"){\r\n            setStep(step - 2)\r\n        } else {\r\n            setStep(step - 1)}\r\n        }\r\n\r\n    const nextAction = () => {\r\n        setStep(step + 1)\r\n      }\r\n    \r\n    \r\n    const parseAgeToMonth = () => {\r\n        let ageOfMonth = 0\r\n        if (age1) {\r\n            ageOfMonth += parseInt(age1)*12\r\n        }\r\n        if (age2) {\r\n            ageOfMonth += parseInt(age2)\r\n        }\r\n        return ageOfMonth\r\n    }\r\n\r\n\r\n    const saveMyPetData = async() => {\r\n        if (age1) {\r\n\r\n        }\r\n        const parseMonthAge = parseAgeToMonth()\r\n        \r\n        const postMyPetData = {\r\n            \"owner\": member_id, \"name\": member_name, \"age\": parseMonthAge, \"weight\": \"asddsa\"\r\n        }\r\n    \r\n\r\n        axios.post(`${BACKEND}/mypet`, postMyPetData)\r\n                                .then(res=> console.log(res.data))\r\n                                .catch(err=> console.log(\"에러는\", err))\r\n\r\n        console.log(postMyPetData)\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // 디버깅용 !\r\n        console.log(\"user: \",user)\r\n        console.log(\"status: \",status)\r\n    }, [user, status])\r\n\r\n    \r\n    if (step === 0) \r\n        return (\r\n            <>\r\n                <CustomH1>{member_name && <div>{member_name}님 안녕하세요!</div>}</CustomH1>\r\n\r\n                나이\r\n                <select onChange={handleStatus} name=\"age1\" id=\"input-age1\" value={age1}>\r\n                    <option>0</option>\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                    <option>6</option>\r\n                    <option>7</option>\r\n                    <option>8</option>\r\n                    <option>9</option>\r\n                    <option>10</option>\r\n                    <option>11</option>\r\n                    <option>12</option>\r\n                    <option>13</option>\r\n                    <option>14</option>\r\n                    <option>15</option>\r\n                    <option>16</option>\r\n                    <option>17</option>\r\n                    <option>18</option>\r\n                    <option>19</option>\r\n                    <option>20</option>\r\n                    <option>21</option>\r\n                    <option>22</option>\r\n                    <option>23</option>\r\n                    <option>24</option>\r\n                    <option>25</option>\r\n                    <option>26</option>\r\n                    <option>27</option>\r\n                    <option>28</option>\r\n                    <option>29</option>\r\n                    <option>30</option>\r\n                </select>\r\n                <strong>년</strong>\r\n                <select onChange={handleStatus} name=\"age2\" id=\"input-age2\" value={age2}>\r\n                    <option value=\"0\">0 개월</option>\r\n                    <option value=\"1\">1 개월</option>\r\n                    <option value=\"2\">2 개월</option>\r\n                    <option value=\"3\">3 개월</option>\r\n                    <option value=\"4\">4 개월</option>\r\n                    <option value=\"5\">5 개월</option>\r\n                    <option value=\"6\">6 개월</option>\r\n                    <option value=\"7\">7 개월</option>\r\n                    <option value=\"8\">8 개월</option>\r\n                    <option value=\"9\">9 개월</option>\r\n                    <option value=\"9\">10 개월</option>\r\n                    <option value=\"9\">11 개월</option>\r\n                </select>\r\n\r\n                <CustomH1>반려동물 이름을 입력해주세요 <span>😺</span></CustomH1> \r\n\r\n                <InputStatus onChange={handleStatus} name=\"pet_name\" value={pet_name} />\r\n\r\n                {pet_name && <Button onClick={nextAction}>반려동물 맞춤 데이터 알아보기!</Button>}\r\n                \r\n                \r\n                <button onClick={saveMyPetData}>정보 POST요청</button>\r\n            </>\r\n        )\r\n\r\n\r\n    if (step === 1) \r\n        return (\r\n            <>\r\n                <AgeFit status={status}/>\r\n            </>\r\n        )\r\n    }\r\n\r\nexport default DoctorFitPage;\r\n\r\n\r\n\r\n\r\nconst CustomH1 = styled.h1`\r\n    font-weight: bold;\r\n`;\r\n\r\nconst InputStatus = styled.input.attrs({\r\n    type: 'text',\r\n})`\r\n    border: 0;\r\n    border-bottom: 2px solid black;\r\n    padding: 10px;\r\n    font-size: 2.5rem;\r\n`;\r\n\r\nconst Button = styled.div`\r\n    margin-top: 20px;\r\n    border: 2px solid black;\r\n    padding: 20px;\r\n    width: 320px;\r\n    text-align: center;\r\n`;","import React from 'react';\r\nimport ACpage from './Service/ACpage';\r\nimport DFpage from './Service/DFpage';\r\nimport DoctorFitPage from './Service/DoctorFitPage';\r\nimport styled from 'styled-components';\r\nimport { Route } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MainContainer>\r\n        <Route exact path=\"/\" component={DoctorFitPage} />\r\n        <Route exact path=\"/ddd\" component={DFpage} />\r\n        <Route exact path=\"/hello\" component={ACpage} />\r\n      </MainContainer>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\nconst MainContainer = styled.div`\r\n    width: 50%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n`;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}