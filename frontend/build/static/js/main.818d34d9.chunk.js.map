{"version":3,"sources":["Components/AmountCalculator/Novi.js","config.js","Components/AmountCalculator/AmountCalculator.js","Hooks/useFetchData.js","Components/AddBasket.js","Service/ACpage.js","App.js","index.js"],"names":["NoviGraph","data","keys","indexBy","margin","top","right","bottom","left","padding","colors","scheme","defs","id","type","background","color","size","stagger","rotation","lineWidth","spacing","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","animate","motionStiffness","motionDamping","BACKEND","tempStyle","height","width","AmountCalculator","standard","useState","feed","setFeed","nutrient","setNutrient","useEffect","console","log","getFeedAxios","a","Promise","resolve","setTimeout","axios","get","result","fetchedData","error","getNutrientAxios","useFetchData","setKeys","feedKey","setFeedKey","feedAmount","setFeedAmount","nutrientKey","setNutrientKey","nutrinetAmount","initialDataState","setData","filterData","filter","object","parseInt","calFeedAmountIndicator","calorie","useHandleFeedData","event","target","targetFeedData","name","moisture","crude_protein","crude_fat","crude_fiber","crude_ash","calcium","phosphorus","feedAmountIndicator","tempData","hasOwnProperty","i","length","parseFloat","toFixed","useHandleNutrientData","targetNutrientData","item","Array","concat","Novi","map","key","onClick","AddBasket","sendBasketSignal","window","parent","postMessage","target_id","target_category","ACpage","step","setStep","age1","age2","weight1","weight2","neutralization","bodyFormat","ispregnant","status","setStatus","setStandard","handleStatus","value","checked","calculateStatus","mergeWeight","RER","FACTOR","ageParseMonth","factorCalculate","DER","Math","round","WATER","minimun","maximun","prevAction","nextAction","getCalculateStatus","onChange","className","htmlFor","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.818d34d9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ResponsiveBar } from '@nivo/bar';\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst datas = [\r\n    {\r\n      \"nutrient\": \"칼로리\",\r\n      \"촉촉 사료\": 598,\r\n    //   \"촉촉 사료Color\": \"hsl(266, 70%, 50%)\",\r\n      \"영양제 temp\": 51,\r\n    //   \"영양제 tempColor\": \"hsl(202, 70%, 50%)\",\r\n      \"간식 temp\": 23,\r\n    //   \"간식 tempColor\": \"hsl(41, 70%, 50%)\",\r\n      },\r\n    {\r\n      \"nutrient\": \"수분량\",\r\n      \"촉촉 사료\": 322,\r\n    //   \"촉촉 사료Color\": \"hsl(230, 70%, 50%)\",\r\n      \"영양제 temp\": 13,\r\n    //   \"영양제 tempColor\": \"hsl(295, 70%, 50%)\",\r\n      \"간식 temp\": 5,\r\n    //   \"간식 tempColor\": \"hsl(123, 70%, 50%)\",\r\n      },\r\n    {\r\n      \"nutrient\": \"조단백\",\r\n      \"촉촉 사료\": 39,\r\n    //   \"촉촉 사료Color\": \"hsl(313, 70%, 50%)\",\r\n      \"영양제 temp\": 13,\r\n    //   \"영양제 tempColor\": \"hsl(121, 70%, 50%)\",\r\n      \"간식 temp\": 71,\r\n    //   \"간식 tempColor\": \"hsl(64, 70%, 50%)\",\r\n      },\r\n    {\r\n      \"nutrient\": \"조지방\",\r\n      \"촉촉 사료\": 35,\r\n    //   \"촉촉 사료Color\": \"hsl(145, 70%, 50%)\",\r\n      \"영양제 temp\": 100,\r\n    //   \"영양제 tempColor\": \"hsl(116, 70%, 50%)\",\r\n      \"간식 temp\": 143,\r\n    //   \"간식 tempColor\": \"hsl(115, 70%, 50%)\",\r\n      },\r\n    {\r\n      \"nutrient\": \"조섬유\",\r\n      \"촉촉 사료\": 150,\r\n    //   \"촉촉 사료Color\": \"hsl(285, 70%, 50%)\",\r\n      \"영양제 temp\": 100,\r\n    //   \"영양제 tempColor\": \"hsl(264, 70%, 50%)\",\r\n      \"간식 temp\": 156,\r\n    //   \"간식 tempColor\": \"hsl(337, 70%, 50%)\",\r\n      },\r\n    {\r\n      \"nutrient\": \"조회분\",\r\n      \"촉촉 사료\": 179,\r\n    //   \"촉촉 사료Color\": \"hsl(275, 70%, 50%)\",\r\n      \"영양제 temp\": 100,\r\n    //   \"영양제 tempColor\": \"hsl(256, 70%, 50%)\",\r\n      \"간식 temp\": 188,\r\n    //   \"간식 tempColor\": \"hsl(341, 70%, 50%)\",\r\n      },\r\n    {\r\n      \"nutrient\": \"칼슘\",\r\n      \"촉촉 사료\": 169,\r\n    //   \"촉촉 사료Color\": \"hsl(115, 70%, 50%)\",\r\n      \"영양제 temp\": 163,\r\n    //   \"영양제 tempColor\": \"hsl(232, 70%, 50%)\",\r\n      \"간식 temp\": 119,\r\n    //   \"간식 tempColor\": \"hsl(159, 70%, 50%)\",\r\n      },\r\n    {\r\n      \"nutrient\": \"인\",\r\n      \"촉촉 사료\": 169,\r\n    //   \"촉촉 사료Color\": \"hsl(115, 70%, 50%)\",\r\n      \"영양제 temp\": 163,\r\n    //   \"영양제 tempColor\": \"hsl(232, 70%, 50%)\",\r\n      \"간식 temp\": 119,\r\n    //   \"간식 tempColor\": \"hsl(159, 70%, 50%)\",\r\n       }\r\n  ]\r\n// console.log(datas)\r\n\r\n\r\n// 여기에 data가 없을 시 initialFormat을 정의해서, step3을 없애자!\r\nconst NoviGraph = ({ data = [] , keys }) => (\r\n    <ResponsiveBar\r\n        data={data}\r\n        keys={keys}\r\n        indexBy=\"item\"\r\n        margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n        padding={0.3}\r\n        colors={{ scheme: 'nivo' }}\r\n        // defs => 위아래\r\n        defs={[\r\n            {\r\n                id: 'dots',\r\n                type: 'patternDots',\r\n                background: 'inherit',\r\n                color: '#38bcb2',\r\n                size: 4,\r\n                padding: 1,\r\n                stagger: true\r\n            },\r\n            {\r\n                id: 'lines',\r\n                type: 'patternLines',\r\n                background: 'inherit',\r\n                color: '#eed312',\r\n                rotation: -45,\r\n                lineWidth: 6,\r\n                spacing: 10\r\n            }\r\n        ]}\r\n        // fill={[\r\n        //     {\r\n        //         match: {\r\n        //             id: 'fries'\r\n        //         },\r\n        //         id: 'dots'\r\n        //     },\r\n        //     {\r\n        //         match: {\r\n        //             id: '간식 temp'\r\n        //         },\r\n        //         id: 'lines'\r\n        //     }\r\n        // ]}\r\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'item',\r\n            legendPosition: 'middle',\r\n            legendOffset: 32\r\n        }}\r\n        axisLeft={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'amount',\r\n            legendPosition: 'middle',\r\n            legendOffset: -40\r\n        }}\r\n        labelSkipWidth={12}\r\n        labelSkipHeight={12}\r\n        labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n        legends={[\r\n            {\r\n                dataFrom: 'keys',\r\n                anchor: 'bottom-right',\r\n                direction: 'column',\r\n                justify: false,\r\n                translateX: 120,\r\n                translateY: 0,\r\n                itemsSpacing: 2,\r\n                itemWidth: 100,\r\n                itemHeight: 20,\r\n                itemDirection: 'left-to-right',\r\n                itemOpacity: 0.85,\r\n                symbolSize: 20,\r\n                effects: [\r\n                    {\r\n                        on: 'hover',\r\n                        style: {\r\n                            itemOpacity: 1\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n        animate={true}\r\n        motionStiffness={90}\r\n        motionDamping={15}\r\n    />\r\n)\r\n\r\nexport default NoviGraph;","// export const BACKEND = \"http://127.0.0.1:8000\";\r\nexport const BACKEND = \"https://petdy-test-backend-tedhoon.endpoint.ainize.ai\";","import React, { useEffect, useState } from 'react';\r\nimport NoviGraph from './Novi';\r\nimport { useFetchData } from '../../Hooks/useFetchData';\r\n\r\n// 플로우를, 처음에 기준 그래프를 띄워주는게 아니라\r\n// 사료나 간식을 선택하면, 빨간줄, limit를 생성해주자. + 양 미세조정 가능하게.\r\n\r\nconst tempStyle={\r\n  height:\"90vh\", \r\n  width: \"90vw\"\r\n}\r\n\r\nfunction AmountCalculator({ standard }) {\r\n  const [feed, nutrient] = useFetchData();\r\n  const [keys, setKeys] = useState([]);\r\n  const [feedKey, setFeedKey] = useState([]);\r\n  const [feedAmount, setFeedAmount] = useState(null);\r\n  const [nutrientKey, setNutrientKey] = useState([]);\r\n  const [nutrinetAmount, setNutrientAmount] = useState(5)\r\n  const initialDataState = [\r\n      {\r\n          \"item\": \"칼로리(Kcal)\",\r\n      },\r\n      {\r\n          \"item\": \"수분량\",\r\n      },\r\n      {\r\n          \"item\": \"조단백(g)\",\r\n      },\r\n      {\r\n          \"item\": \"조지방(g)\",\r\n      },\r\n      {\r\n          \"item\": \"조섬유(g)\",\r\n      },\r\n      {\r\n          \"item\": \"조회분(g)\",\r\n      },\r\n      {\r\n          \"item\": \"칼슘(g)\",\r\n      },\r\n      {\r\n          \"item\": \"인(g)\",\r\n      }\r\n    ]\r\n  const [data, setData] = useState(initialDataState)\r\n\r\n  const filterData = (type, id) => {\r\n    if (type===\"feed\") {\r\n      return feed.filter(object => {\r\n        return object['id'] === parseInt(id)\r\n      })\r\n    } else if (type===\"nutrient\") {\r\n      return nutrient.filter(object => {\r\n        return object['id'] === parseInt(id)\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  // 사료 급여 적정량 인디케이터 환산\r\n  const calFeedAmountIndicator = (calorie) => {\r\n    return (standard.calorie/calorie)\r\n  }\r\n\r\n  const useHandleFeedData = async(event) => {\r\n    \r\n    const { id } = event.target;\r\n    const targetFeedData = await filterData(\"feed\", id)\r\n    // 넣을껀 target id를 가진 하나의 것이다.\r\n    const { \r\n      name,\r\n      calorie,\r\n      moisture,\r\n      crude_protein,\r\n      crude_fat,\r\n      crude_fiber,\r\n      crude_ash,\r\n      calcium,\r\n      phosphorus\r\n    } = targetFeedData[0];\r\n    \r\n    const feedAmountIndicator = calFeedAmountIndicator(calorie)\r\n    // console.log(\"cal\" , calorie)\r\n    // console.log(data)\r\n\r\n    let tempData = data\r\n\r\n    if (tempData[0].hasOwnProperty(name)) {\r\n      // key 값이 있는지 확인\r\n      for(let i=0; i<tempData.length; i++) {\r\n        delete tempData[i][name]\r\n      }\r\n    } else {\r\n\r\n      // 추천값 곱하고 소숫점 2자리 수에서 반올림, toFixed를 쓰면 string이 되기 때문에 연산 후 Float 형변환\r\n      tempData[0][name] = parseFloat((parseFloat(calorie)*feedAmountIndicator).toFixed(2))\r\n      tempData[1][name] = parseFloat((parseFloat(moisture)*feedAmountIndicator).toFixed(2))\r\n      tempData[2][name] = parseFloat((parseFloat(crude_protein)*feedAmountIndicator).toFixed(2))\r\n      tempData[3][name] = parseFloat((parseFloat(crude_fat)*feedAmountIndicator).toFixed(2))\r\n      tempData[4][name] = parseFloat((parseFloat(crude_fiber)*feedAmountIndicator).toFixed(2))\r\n      tempData[5][name] = parseFloat((parseFloat(crude_ash)*feedAmountIndicator).toFixed(2))\r\n      tempData[6][name] = parseFloat((parseFloat(calcium)*feedAmountIndicator).toFixed(2))\r\n      tempData[7][name] = parseFloat((parseFloat(phosphorus)*feedAmountIndicator).toFixed(2))\r\n    }\r\n    setFeedAmount(feedAmountIndicator)\r\n    setData(tempData)\r\n\r\n    console.log(\"템데\", tempData)\r\n    console.log(\"네임\", name)\r\n    // 템데에 네임이 없으면 ? => \r\n\r\n    // 그니까 내가 하고싶은건 1 -> 2 누르는건 상관없는데 다시 1누르면 안되는거\r\n    if (!tempData[0].hasOwnProperty(name)) {\r\n      setFeedKey([])\r\n      setNutrientKey([])\r\n      setData(initialDataState)\r\n      setFeedAmount(null)\r\n    } else {\r\n      setFeedKey([name])\r\n    }  \r\n  };\r\n\r\n  const useHandleNutrientData = async(event) => {\r\n    // 여기서 setData로 초기화?\r\n    const { id } = event.target;\r\n    const targetNutrientData = await filterData(\"nutrient\", id)\r\n\r\n    // console.log(targetNutrientData)\r\n\r\n    // 넣을껀 target id를 가진 하나의 것이다.\r\n    const { \r\n      name,\r\n      calorie,\r\n      moisture,\r\n      crude_protein,\r\n      crude_fat,\r\n      crude_fiber,\r\n      crude_ash,\r\n      calcium,\r\n      phosphorus\r\n    } = targetNutrientData[0];\r\n    \r\n    // console.log(\"cal\" , calorie)\r\n    // console.log(data)\r\n\r\n    let tempData = data\r\n\r\n    if (tempData[0].hasOwnProperty(name)) {\r\n      // key 지워주자\r\n      setNutrientKey(nutrientKey.filter(item => item !== name))\r\n\r\n      // key 값이 있는지 확인\r\n      for(let i=0; i<tempData.length; i++) {\r\n        delete tempData[i][name]\r\n      }\r\n    } else {\r\n      // 추천값 곱하고 소숫점 2자리 수에서 반올림\r\n      tempData[0][name] = parseFloat((parseFloat(calorie)*nutrinetAmount).toFixed(2))\r\n      tempData[1][name] = parseFloat((parseFloat(moisture)*nutrinetAmount).toFixed(2))\r\n      tempData[2][name] = parseFloat((parseFloat(crude_protein)*nutrinetAmount).toFixed(2))\r\n      tempData[3][name] = parseFloat((parseFloat(crude_fat)*nutrinetAmount).toFixed(2))\r\n      tempData[4][name] = parseFloat((parseFloat(crude_fiber)*nutrinetAmount).toFixed(2))\r\n      tempData[5][name] = parseFloat((parseFloat(crude_ash)*nutrinetAmount).toFixed(2))\r\n      tempData[6][name] = parseFloat((parseFloat(calcium)*nutrinetAmount).toFixed(2))\r\n      tempData[7][name] = parseFloat((parseFloat(phosphorus)*nutrinetAmount).toFixed(2))\r\n    \r\n      setNutrientKey([...nutrientKey, name])\r\n    }\r\n    // console.log(tempData)\r\n    setData(tempData)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(\"작동\")\r\n    console.log(\"data\",data)\r\n    // console.log(\"위아래\")\r\n    // console.log(\"standard\", standard)\r\n    // feed & nutrient 합치게 생성\r\n    // let mergeKeys = new Array();\r\n    // mergeKeys = mergeKeys.concat(feedKey, nutrientKey)\r\n    // setKeys(mergeKeys) \r\n\r\n    setKeys(\r\n      new Array().concat(feedKey, nutrientKey)\r\n    )\r\n\r\n    console.log(\"feed keys\", feedKey)\r\n    console.log(\"nutrient Keys\", nutrientKey)\r\n\r\n  }, [data, feedKey, nutrientKey])\r\n\r\n  const useReset = () => {\r\n    setData(initialDataState);\r\n    setKeys([])\r\n    setFeedKey([])\r\n    setNutrientKey([])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <h2>standard data</h2>\r\n      이름: {standard.name} <br />\r\n      적정(기준) 칼로리: {standard.calorie} kcal<br />\r\n      적정(기준) 수분량: {standard.moisture} ~ {standard.moisture*2} ml <br />\r\n      적정(기준) 단백질: {standard.crude_protein} g<br />\r\n      적정(기준) 조지방: {standard.crude_fat} g<br />\r\n      적정(기준) 조섬유: {standard.crude_fiber} g<br />\r\n      적정(기준) 조회분: {standard.crude_ash} g<br />\r\n      적정(기준) 칼슘: {standard.calcium} g<br />\r\n      적정(기준) 인: {standard.phosphorus} g<br />\r\n      <div style={tempStyle}>\r\n        <NoviGraph data={data} keys={keys} />\r\n\r\n      </div>\r\n      \r\n\r\n      <div>\r\n        {feedAmount && `칼로리 기준 1일 사료 급여 추천량 : ${feedAmount}g`}\r\n      </div>\r\n      <div>\r\n        <h1>사료</h1>\r\n        {feed && feed.map(data=> \r\n          <button key={data.id} id={data.id} onClick={useHandleFeedData}>{data.name}</button>)}\r\n        <br />   <br />   <br />   <br />   <br />   \r\n        <h1>영양제</h1> <h3>현재는 모두 5g기준</h3>\r\n        {nutrient && nutrient.map(data=> \r\n          <button key={data.id} id={data.id} onClick={useHandleNutrientData}>{data.name}</button>)}\r\n        <br />   <br />   <br />   <br />   <br />   \r\n\r\n        <button onClick={useReset}>전체 초기화</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AmountCalculator;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BACKEND } from '../config';\r\n// 추후 React.memo 최적화하기 << 일단 useEffect로 했숨\r\n\r\n// data를 fetch후 가공해서 알맞은 format으로 바꿔주는 hook\r\n\r\n// [{\r\n//     \"nutrient\": \"\",\r\n//     \"타겟1: \"값\",\r\n// /\r\n//     \"타겟2: \"값\",\r\n// /     ...\r\n//     }\r\n//     ...  \r\n// ]\r\n\r\n// \"사료이름\" : 값,\r\n// \"영양제이름\": 값\r\n\r\nconst mockAsyncFeedData = () => \r\n    new Promise(resolve => {\r\n        setTimeout(async function() {\r\n            const result = await axios.get(`${BACKEND}/exchangedfeed/`)\r\n            resolve({\r\n                data: result.data\r\n            })\r\n        }, 100)\r\n    })\r\n\r\nconst mockAsyncNutrientData = () => \r\n    new Promise(resolve => {\r\n        setTimeout(async function() {\r\n            const result = await axios.get(`${BACKEND}/exchangednutrient/`)\r\n            resolve({\r\n                data: result.data\r\n            })\r\n        }, 100)\r\n    })\r\n\r\nexport const useFetchData = () => {\r\n    // console.log(\"중복호출 막아야한다\")\r\n    // 일단 data에 feed만 담아서 해봅시당 \r\n    // data는 object여야 함\r\n    const [feed, setFeed] = useState(null)\r\n    const [nutrient, setNutrient] = useState(null)\r\n    useEffect(() => {\r\n        console.log(\"useFetchData 호출\")\r\n         // mockAsyncData 호출 및 데이터 set\r\n        const getFeedAxios = async () => {\r\n            try {\r\n                const { data : fetchedData } = await mockAsyncFeedData();\r\n                setFeed(fetchedData);\r\n                console.log(\"fetched feed data\", fetchedData)\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        };\r\n\r\n        const getNutrientAxios = async () => {\r\n            try {\r\n                const { data : fetchedData } = await mockAsyncNutrientData();\r\n                setNutrient(fetchedData);\r\n                console.log(\"fetched nutrient data\", fetchedData)\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        };\r\n\r\n        getFeedAxios();\r\n        getNutrientAxios();\r\n    \r\n    }, [])\r\n   \r\n    return [feed, nutrient]\r\n}","import React, { useEffect } from 'react';\r\n\r\n\r\nfunction AddBasket() {\r\n\r\n\r\n    const sendBasketSignal = (event) => {  \r\n        const { id } = event.target;\r\n        const category = 144;\r\n        console.log('자식창 로드!');  \r\n  \r\n        //targetWindow.postMessage(message, targetOrigin, [transfer]);\r\n        window.parent.postMessage({ target_id : id, target_category : category }, '*');\r\n\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     sendMessageToParent();\r\n    // })\r\n\r\n    \r\n    return (\r\n        <>\r\n            <button id=\"248\" onClick={sendBasketSignal}>관절 처방사료 장바구니 담기</button>\r\n            <br />\r\n            <button id=\"251\" onClick={sendBasketSignal}>실리콘 커버 장바구니 담기</button>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default AddBasket;","import React, { useState, useEffect } from 'react';\r\nimport AmountCalculator from '../Components/AmountCalculator/AmountCalculator';\r\nimport './ACpage.css';\r\nimport AddBasket from '../Components/AddBasket';\r\n\r\nfunction ACpage() {\r\n  // const [age, setAge] = useState(''); // checkbox로 n년 m개월로 가야하나..\r\n  const [step, setStep] = useState(1)\r\n  const [status, setStatus] = useState({\r\n    age1: 0,\r\n    age2: 0,\r\n    weight1: 0,\r\n    weight2: 0,\r\n    neutralization: false,\r\n    bodyFormat: \"\",\r\n    ispregnant: false,\r\n  })\r\n  const { age1, age2, weight1, weight2, neutralization, bodyFormat, ispregnant } = status;\r\n\r\n  // const [weight, setWeight] = useState('');  // n . m kg?\r\n  // const [neutralization, setNeutralization] = useState(false) // 중성화 여부\r\n  // const [bodyFormat, setBodyFormat] = useState('') // 체형(비만, 뚱뚱.. etc)\r\n  // const [ispregnant, setPregnant] = useState(false) // 임신여부\r\n  // 활발해요? < 이건 아직 필요를 모르겠음\r\n  const [standard, setStandard] = useState({\r\n    name: \"\",\r\n    calorie: \"\", \r\n    moisture: \"\",\r\n    crude_protein: \"\",\r\n    crude_fat: \"\",\r\n    crude_fiber: \"\",\r\n    crude_ash: \"\",\r\n    calcium: \"\",\r\n    phosphorus: \"\" \r\n  })\r\n\r\n  const handleStatus = (event) => {\r\n\r\n    const target = event.target;\r\n    const { name } = target;\r\n    const value = target.name === 'ispregnant' || target.name === 'neutralization' ? target.checked : target.value;\r\n    \r\n    setStatus({\r\n      ...status,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  const factorCalculate = () => {\r\n    const ageParseMonth = age1 * 12 + age2\r\n    // FACTOR 계산기\r\n    if (bodyFormat === \"fat\") {\r\n      return 1\r\n    } \r\n    if (bodyFormat === \"chubby\") {\r\n      return 1.4\r\n    } \r\n    if (ageParseMonth <= 4) {\r\n      return 3;\r\n    } \r\n    else if (ageParseMonth <= 12 || ispregnant) {\r\n      return 2; // 임신시 중성화 조건은 당연히 pass일거고, 1.8 or 1.4인데 , 만약 뚱뚱할경우 + 임신이면 => 1 또는 1.4가 나와버리는데 ispregnant condition을 bodyFormat위로 빼야하나? 이건 조건을 물어봐야할 것 같음\r\n    }\r\n    else if (ageParseMonth <= 84) {\r\n      if (neutralization) {\r\n        return 1.6\r\n      }\r\n      else {\r\n        return 1.8\r\n      }\r\n    }\r\n    else {\r\n      return 1.4\r\n    } \r\n  }\r\n\r\n\r\n  const calculateStatus = () => {\r\n    // DER = RER X Factor\r\n    // DER(일일 권장 칼로리)\r\n    // RER(기초 대사 칼로리)\r\n    // weigth * 30 + 70 (kcal)\r\n    const mergeWeight = parseFloat(weight1+'.'+weight2)\r\n    const RER = mergeWeight * 30 + 70\r\n    console.log(\"RER : \" , RER)\r\n    console.log(\"mergeWeight\", mergeWeight)\r\n    const FACTOR = factorCalculate()\r\n    // console.log(FACTOR)\r\n\r\n    // WATER => weight X 50~100\r\n    // let FACTOR = 1\r\n \r\n\r\n    \r\n    // 근데 여기서 건식, 습식을 나눠버리믄.\r\n    // 사료량이랑 비교해줬을 때 어떻게 해야하지.......흠\r\n    // 나누지 말고 통일할까\r\n    const DER = Math.round(RER * FACTOR);\r\n    // 습식은 DER * 0.7\r\n    const WATER = {\r\n      minimun: Math.round(mergeWeight * 50),\r\n      maximun: Math.round(mergeWeight * 100)\r\n    };\r\n    return { DER, WATER }\r\n  } \r\n\r\n  const getCalculateStatus = () => {\r\n      \r\n      const { DER, WATER } = calculateStatus();\r\n      setStandard({\r\n        name: '맞춤 영양소 제공량',\r\n        calorie: DER, \r\n        moisture: WATER.minimun,\r\n        crude_protein: 100,\r\n        crude_fat: 100,\r\n        crude_fiber: 100,\r\n        crude_ash: 100,\r\n        calcium: 100,\r\n        phosphorus: 100 \r\n      })\r\n  }\r\n\r\n\r\n  const prevAction = (event) => {\r\n    if (event.target.id === \"result_page_prev\"){\r\n      setStep(step - 2)\r\n    } else {\r\n    setStep(step - 1)\r\n  }\r\n  }\r\n  const nextAction = () => {\r\n    setStep(step + 1)\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // console.log(standard)\r\n    console.log(status)\r\n  }, [standard, age1, age2 , status])\r\n\r\n  useEffect(() => {\r\n    if(step===3) {\r\n      getCalculateStatus()\r\n      console.log(\"계산!\")\r\n      setTimeout(() => {\r\n        setStep(4)\r\n      }, 250)\r\n    }\r\n  }, [step])\r\n\r\n  \r\n\r\n\r\n  if (step === 1)\r\n    return (\r\n        <>\r\n            나이\r\n            <select onChange={handleStatus} name=\"age1\" id=\"input-age1\" value={age1}>\r\n                <option>0</option>\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>4</option>\r\n                <option>5</option>\r\n                <option>6</option>\r\n                <option>7</option>\r\n                <option>8</option>\r\n                <option>9</option>\r\n                <option>10</option>\r\n                <option>11</option>\r\n                <option>12</option>\r\n                <option>13</option>\r\n                <option>14</option>\r\n                <option>15</option>\r\n                <option>16</option>\r\n                <option>17</option>\r\n                <option>18</option>\r\n                <option>19</option>\r\n                <option>20</option>\r\n                <option>21</option>\r\n                <option>22</option>\r\n                <option>23</option>\r\n                <option>24</option>\r\n                <option>25</option>\r\n                <option>26</option>\r\n                <option>27</option>\r\n                <option>28</option>\r\n                <option>29</option>\r\n                <option>30</option>\r\n            </select>\r\n            <strong>년</strong>\r\n            <select onChange={handleStatus} name=\"age2\" id=\"input-age2\" value={age2}>\r\n                <option value=\"0\">0 개월</option>\r\n                <option value=\"1\">1 개월</option>\r\n                <option value=\"2\">2 개월</option>\r\n                <option value=\"3\">3 개월</option>\r\n                <option value=\"4\">4 개월</option>\r\n                <option value=\"5\">5 개월</option>\r\n                <option value=\"6\">6 개월</option>\r\n                <option value=\"7\">7 개월</option>\r\n                <option value=\"8\">8 개월</option>\r\n                <option value=\"9\">9 개월</option>\r\n                <option value=\"9\">10 개월</option>\r\n                <option value=\"9\">11 개월</option>\r\n            </select>\r\n\r\n            <br />\r\n\r\n            <select onChange={handleStatus} name=\"weight1\" id=\"input-weight1\" value={weight1}>\r\n                <option>0</option>\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>4</option>\r\n                <option>5</option>\r\n                <option>6</option>\r\n                <option>7</option>\r\n                <option>8</option>\r\n                <option>9</option>\r\n                <option>10</option>\r\n                <option>11</option>\r\n                <option>12</option>\r\n                <option>13</option>\r\n                <option>14</option>\r\n                <option>15</option>\r\n                <option>16</option>\r\n                <option>17</option>\r\n                <option>18</option>\r\n                <option>19</option>\r\n                <option>20</option>\r\n                <option>21</option>\r\n                <option>22</option>\r\n                <option>23</option>\r\n                <option>24</option>\r\n                <option>25</option>\r\n                <option>26</option>\r\n                <option>27</option>\r\n                <option>28</option>\r\n                <option>29</option>\r\n                <option>30</option>\r\n                <option>31</option>\r\n                <option>32</option>\r\n                <option>33</option>\r\n                <option>34</option>\r\n                <option>35</option>\r\n                <option>36</option>\r\n                <option>37</option>\r\n                <option>38</option>\r\n                <option>39</option>\r\n                <option>40</option>\r\n                <option>41</option>\r\n                <option>42</option>\r\n                <option>43</option>\r\n                <option>44</option>\r\n                <option>45</option>\r\n            </select>\r\n            <strong>.</strong>\r\n            <select onChange={handleStatus} name=\"weight2\" id=\"input-weight2\" value={weight2}>\r\n                <option value=\"0\">0 kg</option>\r\n                <option value=\"1\">1 kg</option>\r\n                <option value=\"2\">2 kg</option>\r\n                <option value=\"3\">3 kg</option>\r\n                <option value=\"4\">4 kg</option>\r\n                <option value=\"5\">5 kg</option>\r\n                <option value=\"6\">6 kg</option>\r\n                <option value=\"7\">7 kg</option>\r\n                <option value=\"8\">8 kg</option>\r\n                <option value=\"9\">9 kg</option>\r\n            </select>\r\n\r\n            <br />\r\n            <br />\r\n            {weight1 && age1 ? <button onClick={nextAction}>다음</button> : \"\"}\r\n\r\n            <AddBasket />\r\n        </>\r\n    )\r\n    \r\n  if (step === 2)\r\n  return (\r\n      <>\r\n        <div className=\"\">\r\n            <div>\r\n              <input onChange={handleStatus} type=\"radio\" checked={bodyFormat === \"thin\" ? true : false} id=\"thin\" name=\"bodyFormat\" value=\"thin\" />\r\n              <label htmlFor=\"thin\">날씬해요</label>\r\n            </div>\r\n            \r\n            <div>\r\n              <input onChange={handleStatus} type=\"radio\" checked={bodyFormat === \"ordinary\" ? true : false} id=\"ordinary\" name=\"bodyFormat\" value=\"ordinary\" />\r\n              <label htmlFor=\"ordinary\">보통이에요</label>\r\n            </div>\r\n\r\n            <div>\r\n              <input onChange={handleStatus} type=\"radio\" checked={bodyFormat === \"chubby\" ? true : false} id=\"chubby\" name=\"bodyFormat\" value=\"chubby\" />\r\n              <label htmlFor=\"chubby\">통통해요</label>\r\n            </div>\r\n\r\n            <div>\r\n              <input onChange={handleStatus} type=\"radio\" checked={bodyFormat === \"fat\" ? true : false} id=\"fat\" name=\"bodyFormat\" value=\"fat\" />\r\n              <label htmlFor=\"fat\">뚱뚱해요</label>\r\n            </div>\r\n        </div>\r\n          <br />\r\n\r\n          중성화여부\r\n\r\n          <input onChange={handleStatus} type=\"checkbox\" name=\"neutralization\" checked={neutralization} />\r\n          <br />\r\n   \r\n          <label htmlFor=\"ispregnant\">임신 여부</label>\r\n          <input onChange={handleStatus} type=\"checkbox\" name=\"ispregnant\" checked={ispregnant} />\r\n          <br />\r\n          \r\n          <button onClick={prevAction}>이전</button>\r\n          <button onClick={nextAction}>다음</button>\r\n      </>\r\n  )\r\n\r\n  if (step === 3)  \r\n  return (\r\n    <>\r\n      <div>계산중...</div>\r\n    </>\r\n  )\r\n\r\n  if (step === 4) \r\n  return (\r\n    <>\r\n      <p>입력 나이 : {age1}년 {age2}개월</p>\r\n      <p>입력 몸무게: {weight1}.{weight2} kg</p>\r\n      <p>중성화 여부: {neutralization ? '중성화' : \"중성화 X\"}</p> \r\n      <p>체형: {bodyFormat? bodyFormat : \"선택하지 않음\"}</p>\r\n      <p>임신 여부: {ispregnant ? '임신' : '임신 X'}</p>\r\n\r\n      <AmountCalculator standard={standard} />\r\n      <button onClick={prevAction} id=\"result_page_prev\">이전</button>\r\n    </>\r\n    )\r\n\r\n\r\n\r\n  }\r\n\r\nexport default ACpage;\r\n","import React from 'react';\r\nimport ACpage from './Service/ACpage';\r\nimport { Route } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Route exact path=\"/\" component={ACpage} />\r\n  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}